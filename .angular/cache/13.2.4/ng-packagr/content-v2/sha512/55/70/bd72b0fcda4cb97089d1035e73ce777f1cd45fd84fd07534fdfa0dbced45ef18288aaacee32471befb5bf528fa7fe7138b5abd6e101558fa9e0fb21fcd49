{"hash":"16c0a37a5855e585b4996ea1a387b5c20f1cd01c","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, TemplateRef, Component, Input, Output, ViewChild, Injectable, Pipe, ViewEncapsulation, ViewContainerRef, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i2 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i1$1 from '@formio/angular';\nimport { FormioPromiseService, FormioAlerts, FormioModule } from '@formio/angular';\nimport { each, clone, get } from 'lodash';\nimport { Components, Utils, Formio } from 'formiojs';\nimport * as i2$1 from 'ngx-bootstrap/pagination';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\n\nvar GridFooterPositions;\n(function (GridFooterPositions) {\n    GridFooterPositions[GridFooterPositions[\"bottom\"] = 0] = \"bottom\";\n    GridFooterPositions[GridFooterPositions[\"top\"] = 1] = \"top\";\n    GridFooterPositions[GridFooterPositions[\"both\"] = 2] = \"both\";\n})(GridFooterPositions || (GridFooterPositions = {}));\n\nclass GridHeaderComponent {\n    constructor() {\n        this.headers = [];\n        this.sort = new EventEmitter();\n    }\n    get numHeaders() {\n        return this.headers.length;\n    }\n    load(formio, query, columns) {\n        return Promise.resolve([]);\n    }\n}\nGridHeaderComponent.ɵfac = function GridHeaderComponent_Factory(t) { return new (t || GridHeaderComponent)(); };\nGridHeaderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: GridHeaderComponent, selectors: [[\"ng-component\"]], viewQuery: function GridHeaderComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    } }, inputs: { actionAllowed: \"actionAllowed\" }, outputs: { sort: \"sort\" }, decls: 0, vars: 0, template: function GridHeaderComponent_Template(rf, ctx) { }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridHeaderComponent, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], function () { return []; }, { actionAllowed: [{\n            type: Input\n        }], sort: [{\n            type: Output\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }] }); })();\n\nvar SortType;\n(function (SortType) {\n    SortType[\"ASC\"] = \"asc\";\n    SortType[\"DESC\"] = \"desc\";\n})(SortType || (SortType = {}));\n\nconst _c0$3 = function (a0, a1) { return { \"glyphicon-triangle-top fa-caret-up\": a0, \"glyphicon-triangle-bottom fa-caret-down\": a1 }; };\nfunction FormGridHeaderComponent_ng_template_0_span_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 5);\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(1, _c0$3, ctx_r1.header.sort === \"asc\", ctx_r1.header.sort === \"desc\"));\n} }\nfunction FormGridHeaderComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"thead\")(1, \"tr\")(2, \"th\")(3, \"div\", 0)(4, \"div\", 1)(5, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function FormGridHeaderComponent_ng_template_0_Template_a_click_5_listener() { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.sort.emit(ctx_r2.header); });\n    i0.ɵɵtext(6);\n    i0.ɵɵtemplate(7, FormGridHeaderComponent_ng_template_0_span_7_Template, 1, 4, \"span\", 3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 4);\n    i0.ɵɵtext(9, \" Operations \");\n    i0.ɵɵelementEnd()()()()();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.header.label, \"\\u00A0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.header.sort);\n} }\nclass FormGridHeaderComponent extends GridHeaderComponent {\n    load(formio) {\n        this.header = {\n            label: 'Title',\n            key: 'title',\n            sort: SortType.ASC\n        };\n        this.headers = [this.header];\n        return Promise.resolve(this.headers);\n    }\n    get numHeaders() {\n        return 2;\n    }\n}\nFormGridHeaderComponent.ɵfac = /*@__PURE__*/ function () { let ɵFormGridHeaderComponent_BaseFactory; return function FormGridHeaderComponent_Factory(t) { return (ɵFormGridHeaderComponent_BaseFactory || (ɵFormGridHeaderComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FormGridHeaderComponent)))(t || FormGridHeaderComponent); }; }();\nFormGridHeaderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FormGridHeaderComponent, selectors: [[\"form-grid-header\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[1, \"row\"], [1, \"col-sm-8\"], [3, \"click\"], [\"class\", \"glyphicon fa\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"col-sm-4\"], [1, \"glyphicon\", \"fa\", 3, \"ngClass\"]], template: function FormGridHeaderComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, FormGridHeaderComponent_ng_template_0_Template, 10, 2, \"ng-template\");\n    } }, directives: [i1.NgIf, i1.NgClass], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGridHeaderComponent, [{\n        type: Component,\n        args: [{ selector: 'form-grid-header', template: \"<ng-template>\\n  <thead>\\n    <tr>\\n      <th>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-8\\\">\\n            <a (click)=\\\"sort.emit(header)\\\">\\n              {{ header.label }}&nbsp;<span [ngClass]=\\\"{'glyphicon-triangle-top fa-caret-up': (header.sort === 'asc'), 'glyphicon-triangle-bottom fa-caret-down': (header.sort === 'desc')}\\\" class=\\\"glyphicon fa\\\" *ngIf=\\\"header.sort\\\"></span>\\n            </a>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            Operations\\n          </div>\\n        </div>\\n      </th>\\n    </tr>\\n  </thead>\\n</ng-template>\\n\" }]\n    }], null, null); })();\n\nclass GridService {\n    constructor() { }\n    setRows(rows) {\n        this.rows = rows;\n    }\n    getFormsPerPage() {\n        return this.rows?.length;\n    }\n}\nGridService.ɵfac = function GridService_Factory(t) { return new (t || GridService)(); };\nGridService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: GridService, factory: GridService.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\nclass GridBodyComponent {\n    constructor(service) {\n        this.service = service;\n        this.firstItem = 0;\n        this.lastItem = 0;\n        this.skip = 0;\n        this.limit = 0;\n        this.total = 0;\n        this.rowSelect = new EventEmitter();\n        this.rowAction = new EventEmitter();\n        this.loading = true;\n    }\n    load(formio, query) {\n        return formio.loadForm(query);\n    }\n    onRowSelect(event, row) {\n        event.preventDefault();\n        this.rowSelect.emit(row);\n    }\n    onRowAction(event, row, action) {\n        event.preventDefault();\n        this.rowAction.emit({ row, action });\n    }\n    /**\n     * Set the rows for this Grid body.\n     *\n     * @param query\n     * @param items\n     * @return any\n     */\n    setRows(query, items) {\n        this.rows = [];\n        if (typeof items !== 'object') {\n            this.firstItem = 0;\n            this.lastItem = 0;\n            this.total = 0;\n            this.skip = 0;\n            this.loading = false;\n            this.service.setRows(this.rows);\n            return this.rows;\n        }\n        this.firstItem = query.skip + 1;\n        this.lastItem = this.firstItem + items.length - 1;\n        if (this.lastItem === 0) {\n            this.firstItem = 0;\n        }\n        this.total = items.serverCount;\n        this.limit = query.limit;\n        this.skip = Math.floor(items.skip / query.limit) + 1;\n        this.loading = false;\n        each(items, (item) => {\n            this.rows.push(clone(item));\n        });\n        this.service.setRows(this.rows);\n        return this.rows;\n    }\n}\nGridBodyComponent.ɵfac = function GridBodyComponent_Factory(t) { return new (t || GridBodyComponent)(i0.ɵɵdirectiveInject(GridService)); };\nGridBodyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: GridBodyComponent, selectors: [[\"ng-component\"]], viewQuery: function GridBodyComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    } }, inputs: { header: \"header\", actionAllowed: \"actionAllowed\" }, outputs: { rowSelect: \"rowSelect\", rowAction: \"rowAction\" }, decls: 0, vars: 0, template: function GridBodyComponent_Template(rf, ctx) { }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridBodyComponent, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], function () { return [{ type: GridService }]; }, { header: [{\n            type: Input\n        }], actionAllowed: [{\n            type: Input\n        }], rowSelect: [{\n            type: Output\n        }], rowAction: [{\n            type: Output\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }] }); })();\n\nclass TimeSince {\n    transform(date) {\n        const elapsed = (new Date().getTime() - new Date(date).getTime()) / 1000;\n        let interval;\n        if (interval >= 1) {\n            return interval + ' year' + (interval > 1 ? 's' : '');\n        }\n        interval = Math.floor(elapsed / 2592000);\n        if (interval >= 1) {\n            return interval + ' month' + (interval > 1 ? 's' : '');\n        }\n        interval = Math.floor(elapsed / 86400);\n        if (interval >= 1) {\n            return interval + ' day' + (interval > 1 ? 's' : '');\n        }\n        interval = Math.floor(elapsed / 3600);\n        if (interval >= 1) {\n            return interval + ' hour' + (interval > 1 ? 's' : '');\n        }\n        interval = Math.floor(elapsed / 60);\n        if (interval >= 1) {\n            return interval + ' minute' + (interval > 1 ? 's' : '');\n        }\n        return Math.floor(elapsed) + ' second' + (elapsed > 1 ? 's' : '');\n    }\n}\nTimeSince.ɵfac = function TimeSince_Factory(t) { return new (t || TimeSince)(); };\nTimeSince.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"timeSince\", type: TimeSince, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeSince, [{\n        type: Pipe,\n        args: [{\n                name: 'timeSince'\n            }]\n    }], null, null); })();\n\nfunction FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_11_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_11_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r11); const form_r3 = i0.ɵɵnextContext().$implicit; const ctx_r9 = i0.ɵɵnextContext(3); return ctx_r9.onRowAction($event, form_r3, \"view\"); });\n    i0.ɵɵelement(1, \"span\", 11);\n    i0.ɵɵtext(2, \" Enter Data\");\n    i0.ɵɵelementEnd();\n} }\nfunction FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_13_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r14); const form_r3 = i0.ɵɵnextContext().$implicit; const ctx_r12 = i0.ɵɵnextContext(3); return ctx_r12.onRowAction($event, form_r3, \"submission\"); });\n    i0.ɵɵelement(1, \"span\", 13);\n    i0.ɵɵtext(2, \" View Data\");\n    i0.ɵɵelementEnd();\n} }\nfunction FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_15_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_15_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r17); const form_r3 = i0.ɵɵnextContext().$implicit; const ctx_r15 = i0.ɵɵnextContext(3); return ctx_r15.onRowAction($event, form_r3, \"edit\"); });\n    i0.ɵɵelement(1, \"span\", 14);\n    i0.ɵɵtext(2, \" Edit Form\");\n    i0.ɵɵelementEnd();\n} }\nfunction FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_17_Template(rf, ctx) { if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_17_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r20); const form_r3 = i0.ɵɵnextContext().$implicit; const ctx_r18 = i0.ɵɵnextContext(3); return ctx_r18.onRowAction($event, form_r3, \"permissions\"); });\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵtext(2, \" Permissions\");\n    i0.ɵɵelementEnd();\n} }\nfunction FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_19_Template(rf, ctx) { if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_19_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r23); const form_r3 = i0.ɵɵnextContext().$implicit; const ctx_r21 = i0.ɵɵnextContext(3); return ctx_r21.onRowAction($event, form_r3, \"delete\"); });\n    i0.ɵɵelement(1, \"span\", 17);\n    i0.ɵɵelementEnd();\n} }\nfunction FormGridBodyComponent_ng_template_0_tbody_0_tr_1_Template(rf, ctx) { if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"div\", 2)(3, \"div\", 3)(4, \"a\", 4);\n    i0.ɵɵlistener(\"click\", function FormGridBodyComponent_ng_template_0_tbody_0_tr_1_Template_a_click_4_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r25); const form_r3 = restoredCtx.$implicit; const ctx_r24 = i0.ɵɵnextContext(3); return ctx_r24.onRowSelect($event, form_r3); });\n    i0.ɵɵelementStart(5, \"h5\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 5);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"timeSince\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 6);\n    i0.ɵɵtemplate(11, FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_11_Template, 3, 0, \"button\", 7);\n    i0.ɵɵtext(12, \"\\u00A0 \");\n    i0.ɵɵtemplate(13, FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_13_Template, 3, 0, \"button\", 8);\n    i0.ɵɵtext(14, \"\\u00A0 \");\n    i0.ɵɵtemplate(15, FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_15_Template, 3, 0, \"button\", 8);\n    i0.ɵɵtext(16, \"\\u00A0 \");\n    i0.ɵɵtemplate(17, FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_17_Template, 3, 0, \"button\", 8);\n    i0.ɵɵtext(18, \"\\u00A0 \");\n    i0.ɵɵtemplate(19, FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_19_Template, 2, 0, \"button\", 9);\n    i0.ɵɵelementEnd()()()();\n} if (rf & 2) {\n    const form_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"\", form_r3._id, \"/view\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(form_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Updated \", i0.ɵɵpipeBind1(9, 8, form_r3.modified), \" ago \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.actionAllowed(\"formView\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.actionAllowed(\"formSubmission\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.actionAllowed(\"formEdit\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.actionAllowed(\"formPermission\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.actionAllowed(\"formDelete\"));\n} }\nfunction FormGridBodyComponent_ng_template_0_tbody_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, FormGridBodyComponent_ng_template_0_tbody_0_tr_1_Template, 20, 10, \"tr\", 1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rows);\n} }\nfunction FormGridBodyComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵtemplate(0, FormGridBodyComponent_ng_template_0_tbody_0_Template, 2, 1, \"tbody\", 0);\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.rows);\n} }\nclass FormGridBodyComponent extends GridBodyComponent {\n    load(formio, query) {\n        query = query || {};\n        return formio.loadForms({ params: query }).then((forms) => this.setRows(query, forms));\n    }\n}\nFormGridBodyComponent.ɵfac = /*@__PURE__*/ function () { let ɵFormGridBodyComponent_BaseFactory; return function FormGridBodyComponent_Factory(t) { return (ɵFormGridBodyComponent_BaseFactory || (ɵFormGridBodyComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FormGridBodyComponent)))(t || FormGridBodyComponent); }; }();\nFormGridBodyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FormGridBodyComponent, selectors: [[\"form-grid-body\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col-sm-8\"], [3, \"routerLink\", \"click\"], [1, \"form-updated\", \"small\", \"text-muted\"], [1, \"col-sm-4\"], [\"class\", \"btn btn-outline-secondary btn-sm form-btn form-btn-use\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-outline-secondary btn-sm form-btn\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-danger btn-sm form-btn form-btn-delete\", \"title\", \"Delete form\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-outline-secondary\", \"btn-sm\", \"form-btn\", \"form-btn-use\", 3, \"click\"], [1, \"fa\", \"fa-pencil\"], [1, \"btn\", \"btn-outline-secondary\", \"btn-sm\", \"form-btn\", 3, \"click\"], [1, \"fa\", \"fa-list-alt\"], [1, \"fa\", \"fa-edit\"], [1, \"fa\", \"fa-lock\"], [\"title\", \"Delete form\", 1, \"btn\", \"btn-danger\", \"btn-sm\", \"form-btn\", \"form-btn-delete\", 3, \"click\"], [1, \"fa\", \"fa-trash\"]], template: function FormGridBodyComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, FormGridBodyComponent_ng_template_0_Template, 1, 1, \"ng-template\");\n    } }, directives: [i1.NgIf, i1.NgForOf, i2.RouterLinkWithHref], pipes: [TimeSince], styles: [\".form-btn[_ngcontent-%COMP%]{font-size:.75rem;margin:2px 0}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGridBodyComponent, [{\n        type: Component,\n        args: [{ selector: 'form-grid-body', template: \"<ng-template>\\n  <tbody *ngIf=\\\"rows\\\">\\n    <tr *ngFor=\\\"let form of rows\\\">\\n      <td>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-8\\\">\\n            <a routerLink=\\\"{{form._id}}/view\\\" (click)=\\\"onRowSelect($event, form)\\\"><h5>{{ form.title }}</h5></a>\\n            <div class=\\\"form-updated small text-muted\\\">\\n              Updated {{ form.modified | timeSince }} ago\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <button *ngIf=\\\"actionAllowed('formView')\\\" class=\\\"btn btn-outline-secondary btn-sm form-btn form-btn-use\\\" (click)=\\\"onRowAction($event, form, 'view')\\\"><span class=\\\"fa fa-pencil\\\"></span> Enter Data</button>&nbsp;\\n            <button *ngIf=\\\"actionAllowed('formSubmission')\\\" class=\\\"btn btn-outline-secondary btn-sm form-btn\\\" (click)=\\\"onRowAction($event, form, 'submission')\\\"><span class=\\\"fa fa-list-alt\\\"></span> View Data</button>&nbsp;\\n            <button *ngIf=\\\"actionAllowed('formEdit')\\\" class=\\\"btn btn-outline-secondary btn-sm form-btn\\\" (click)=\\\"onRowAction($event, form, 'edit')\\\"><span class=\\\"fa fa-edit\\\"></span> Edit Form</button>&nbsp;\\n            <button *ngIf=\\\"actionAllowed('formPermission')\\\" class=\\\"btn btn-outline-secondary btn-sm form-btn\\\" (click)=\\\"onRowAction($event, form, 'permissions')\\\"><span class=\\\"fa fa-lock\\\"></span> Permissions</button>&nbsp;\\n            <button *ngIf=\\\"actionAllowed('formDelete')\\\" class=\\\"btn btn-danger btn-sm form-btn form-btn-delete\\\" (click)=\\\"onRowAction($event, form, 'delete')\\\" title=\\\"Delete form\\\"><span class=\\\"fa fa-trash\\\"></span></button>\\n          </div>\\n        </div>\\n      </td>\\n    </tr>\\n  </tbody>\\n</ng-template>\\n\", styles: [\".form-btn{font-size:.75rem;margin:2px 0}\\n\"] }]\n    }], null, null); })();\n\nclass GridFooterComponent {\n    constructor() {\n        this.footerPositions = GridFooterPositions;\n        this.pageChanged = new EventEmitter();\n        this.createItem = new EventEmitter();\n    }\n}\nGridFooterComponent.ɵfac = function GridFooterComponent_Factory(t) { return new (t || GridFooterComponent)(); };\nGridFooterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: GridFooterComponent, selectors: [[\"ng-component\"]], viewQuery: function GridFooterComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    } }, inputs: { header: \"header\", body: \"body\", createText: \"createText\", size: \"size\", actionAllowed: \"actionAllowed\" }, outputs: { pageChanged: \"pageChanged\", createItem: \"createItem\" }, decls: 0, vars: 0, template: function GridFooterComponent_Template(rf, ctx) { }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridFooterComponent, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], function () { return []; }, { header: [{\n            type: Input\n        }], body: [{\n            type: Input\n        }], createText: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], actionAllowed: [{\n            type: Input\n        }], pageChanged: [{\n            type: Output\n        }], createItem: [{\n            type: Output\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }] }); })();\n\nconst _c0$2 = function (a0) { return { label: a0 }; };\nfunction FormGridFooterComponent_ng_template_0_thead_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 3);\n    i0.ɵɵelementContainer(1, 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const label_r5 = i0.ɵɵnextContext().label;\n    i0.ɵɵnextContext();\n    const _r2 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0$2, label_r5));\n} }\nfunction FormGridFooterComponent_ng_template_0_tfoot_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tfoot\", 3);\n    i0.ɵɵelementContainer(1, 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const label_r5 = i0.ɵɵnextContext().label;\n    i0.ɵɵnextContext();\n    const _r2 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0$2, label_r5));\n} }\nfunction FormGridFooterComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵtemplate(0, FormGridFooterComponent_ng_template_0_thead_0_Template, 2, 4, \"thead\", 2);\n    i0.ɵɵtemplate(1, FormGridFooterComponent_ng_template_0_tfoot_1_Template, 2, 4, \"tfoot\", 2);\n} if (rf & 2) {\n    const position_r4 = ctx.position;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", position_r4 === ctx_r1.footerPositions.top);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", position_r4 === ctx_r1.footerPositions.bottom);\n} }\nfunction FormGridFooterComponent_ng_template_2_td_1_button_1_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function FormGridFooterComponent_ng_template_2_td_1_button_1_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(3); return ctx_r13.createItem.emit(\"form\"); });\n    i0.ɵɵelement(1, \"em\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.createText, \"\");\n} }\nfunction FormGridFooterComponent_ng_template_2_td_1_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵtemplate(1, FormGridFooterComponent_ng_template_2_td_1_button_1_Template, 3, 1, \"button\", 7);\n    i0.ɵɵelementStart(2, \"span\", 8)(3, \"span\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 10)(7, \"pagination\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function FormGridFooterComponent_ng_template_2_td_1_Template_pagination_ngModelChange_7_listener($event) { i0.ɵɵrestoreView(_r16); const ctx_r15 = i0.ɵɵnextContext(2); return ctx_r15.body.skip = $event; })(\"pageChanged\", function FormGridFooterComponent_ng_template_2_td_1_Template_pagination_pageChanged_7_listener($event) { i0.ɵɵrestoreView(_r16); const ctx_r17 = i0.ɵɵnextContext(2); return ctx_r17.pageChanged.emit($event); });\n    i0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const label_r10 = i0.ɵɵnextContext().label;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"colSpan\", ctx_r11.header.numHeaders);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.actionAllowed(\"formCreate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r11.body.firstItem, \" - \", ctx_r11.body.lastItem, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" / \", ctx_r11.body.total, \" total\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", label_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"totalItems\", ctx_r11.body.total)(\"itemsPerPage\", ctx_r11.body.limit)(\"ngModel\", ctx_r11.body.skip)(\"maxSize\", ctx_r11.size);\n} }\nfunction FormGridFooterComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, FormGridFooterComponent_ng_template_2_td_1_Template, 8, 10, \"td\", 5);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.header);\n} }\nclass FormGridFooterComponent extends GridFooterComponent {\n    constructor() {\n        super();\n    }\n    ngOnInit() {\n        if (!this.createText) {\n            this.createText = 'Create Form';\n        }\n        if (!this.size) {\n            this.size = 7;\n        }\n    }\n}\nFormGridFooterComponent.ɵfac = function FormGridFooterComponent_Factory(t) { return new (t || FormGridFooterComponent)(); };\nFormGridFooterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FormGridFooterComponent, selectors: [[\"ng-component\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 4, vars: 0, consts: [[\"footer\", \"\"], [\"defaultFooterTemplate\", \"\"], [\"class\", \"formio-grid-footer\", 4, \"ngIf\"], [1, \"formio-grid-footer\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"colSpan\", 4, \"ngIf\"], [3, \"colSpan\"], [\"class\", \"btn btn-primary form-btn-use pull-left float-left\", 3, \"click\", 4, \"ngIf\"], [1, \"pull-right\", \"float-right\", \"item-counter\"], [1, \"page-num\"], [\"role\", \"navigation\"], [1, \"justify-content-center\", \"pagination-sm\", 3, \"totalItems\", \"itemsPerPage\", \"ngModel\", \"maxSize\", \"ngModelChange\", \"pageChanged\"], [1, \"btn\", \"btn-primary\", \"form-btn-use\", \"pull-left\", \"float-left\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-plus\", \"fa\", \"fa-plus\"]], template: function FormGridFooterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, FormGridFooterComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, FormGridFooterComponent_ng_template_2_Template, 2, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    } }, directives: [i1.NgIf, i1.NgTemplateOutlet, i2$1.PaginationComponent, i3.NgControlStatus, i3.NgModel], styles: [\"tfoot.formio-grid-footer td{padding:.3rem}tfoot.formio-grid-footer .page-num{font-size:1.4em}tfoot.formio-grid-footer ul.pagination{margin-top:5px;margin-bottom:0}\\n\"], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGridFooterComponent, [{\n        type: Component,\n        args: [{ encapsulation: ViewEncapsulation.None, template: \"<ng-template #footer let-position=\\\"position\\\" let-label=\\\"label\\\">\\n  <thead class=\\\"formio-grid-footer\\\" *ngIf=\\\"position === footerPositions.top\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"defaultFooterTemplate\\\" [ngTemplateOutletContext]=\\\"{ label: label }\\\"></ng-container>\\n  </thead>\\n  <tfoot class=\\\"formio-grid-footer\\\" *ngIf=\\\"position === footerPositions.bottom\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"defaultFooterTemplate\\\" [ngTemplateOutletContext]=\\\"{ label: label }\\\"></ng-container>\\n  </tfoot>\\n</ng-template>\\n\\n<ng-template let-label=\\\"label\\\" #defaultFooterTemplate>\\n  <tr>\\n    <td *ngIf=\\\"header\\\" [colSpan]=\\\"header.numHeaders\\\">\\n      <button *ngIf=\\\"actionAllowed('formCreate')\\\" class=\\\"btn btn-primary form-btn-use pull-left float-left\\\" (click)=\\\"createItem.emit('form')\\\"><em class=\\\"glyphicon glyphicon-plus fa fa-plus\\\"></em> {{ createText }}</button>\\n      <span class=\\\"pull-right float-right item-counter\\\"><span class=\\\"page-num\\\">{{ body.firstItem }} - {{ body.lastItem }}</span> / {{ body.total }} total</span>\\n      <span [attr.aria-label]=\\\"label\\\" role=\\\"navigation\\\">\\n        <pagination [totalItems]=\\\"body.total\\\" [itemsPerPage]=\\\"body.limit\\\" [(ngModel)]=\\\"body.skip\\\" (pageChanged)=\\\"pageChanged.emit($event)\\\" [maxSize]=\\\"size\\\" class=\\\"justify-content-center pagination-sm\\\">\\n        </pagination>\\n      </span>\\n    </td>\\n  </tr>\\n</ng-template>\\n\", styles: [\"tfoot.formio-grid-footer td{padding:.3rem}tfoot.formio-grid-footer .page-num{font-size:1.4em}tfoot.formio-grid-footer ul.pagination{margin-top:5px;margin-bottom:0}\\n\"] }]\n    }], function () { return []; }, null); })();\n\nvar FormComponents = {\n    header: FormGridHeaderComponent,\n    body: FormGridBodyComponent,\n    footer: FormGridFooterComponent\n};\n\nconst _c0$1 = function (a0, a1) { return { \"glyphicon-triangle-top\": a0, \"glyphicon-triangle-bottom\": a1 }; };\nfunction SubmissionGridHeaderComponent_ng_template_0_th_2_span_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 3);\n} if (rf & 2) {\n    const header_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(1, _c0$1, header_r2.sort === \"asc\", header_r2.sort === \"desc\"));\n} }\nfunction SubmissionGridHeaderComponent_ng_template_0_th_2_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function SubmissionGridHeaderComponent_ng_template_0_th_2_Template_a_click_1_listener() { const restoredCtx = i0.ɵɵrestoreView(_r6); const header_r2 = restoredCtx.$implicit; const ctx_r5 = i0.ɵɵnextContext(2); return ctx_r5.sort.emit(header_r2); });\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, SubmissionGridHeaderComponent_ng_template_0_th_2_span_3_Template, 1, 4, \"span\", 2);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const header_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", header_r2.label, \"\\u00A0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", header_r2.sort);\n} }\nfunction SubmissionGridHeaderComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\")(1, \"tr\");\n    i0.ɵɵtemplate(2, SubmissionGridHeaderComponent_ng_template_0_th_2_Template, 4, 2, \"th\", 0);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.headers);\n} }\nclass SubmissionGridHeaderComponent extends GridHeaderComponent {\n    load(formio, query, columns) {\n        query = query || {};\n        return formio.loadForm({ params: query }).then((form) => {\n            this.headers = [];\n            this.formComponents = new Map();\n            this.setComponents(form.components);\n            columns ? columns.forEach(column => {\n                this.setHeader(this.getHeaderForColumn(column, this.formComponents.get(column.path)));\n            }) : this.setComponentsHeaders(this.formComponents);\n            return this.headers;\n        });\n    }\n    setHeader(header) {\n        this.headers.push(header);\n    }\n    getHeaderForColumn(column, component, sort) {\n        return {\n            label: column.label,\n            key: column.path,\n            sort: sort,\n            component: component ? Components.create(component, null, null, true) : undefined,\n            renderCell: column ? column.renderCell : undefined\n        };\n    }\n    getHeaderForComponent(component, path, sort) {\n        return {\n            label: component.label,\n            key: path,\n            sort: sort,\n            component: component ? Components.create(component, null, null, true) : undefined,\n        };\n    }\n    // Set headers from components in case if columns are not provided\n    setComponentsHeaders(components, sort) {\n        components.forEach((component, path) => {\n            if (component.input &&\n                (!component.hasOwnProperty('tableView') || component.tableView)) {\n                this.setHeader(this.getHeaderForComponent(component, path, sort));\n            }\n        });\n    }\n    // Map components\n    setComponents(components) {\n        Utils.eachComponent(components, (component, newPath) => {\n            this.formComponents.set(`data.${newPath}`, component);\n        });\n    }\n}\nSubmissionGridHeaderComponent.ɵfac = /*@__PURE__*/ function () { let ɵSubmissionGridHeaderComponent_BaseFactory; return function SubmissionGridHeaderComponent_Factory(t) { return (ɵSubmissionGridHeaderComponent_BaseFactory || (ɵSubmissionGridHeaderComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SubmissionGridHeaderComponent)))(t || SubmissionGridHeaderComponent); }; }();\nSubmissionGridHeaderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SubmissionGridHeaderComponent, selectors: [[\"ng-component\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"class\", \"glyphicon\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"glyphicon\", 3, \"ngClass\"]], template: function SubmissionGridHeaderComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, SubmissionGridHeaderComponent_ng_template_0_Template, 3, 1, \"ng-template\");\n    } }, directives: [i1.NgForOf, i1.NgIf, i1.NgClass], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SubmissionGridHeaderComponent, [{\n        type: Component,\n        args: [{ template: \"<ng-template>\\n  <thead>\\n    <tr>\\n      <th *ngFor=\\\"let header of headers\\\">\\n        <a (click)=\\\"sort.emit(header)\\\">\\n          {{ header.label }}&nbsp;<span [ngClass]=\\\"{'glyphicon-triangle-top': (header.sort === 'asc'), 'glyphicon-triangle-bottom': (header.sort === 'desc')}\\\" class=\\\"glyphicon\\\" *ngIf=\\\"header.sort\\\"></span>\\n        </a>\\n      </th>\\n    </tr>\\n  </thead>\\n</ng-template>\\n\" }]\n    }], null, null); })();\n\nfunction SubmissionGridBodyComponent_ng_template_0_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 3);\n} if (rf & 2) {\n    const rowHeader_r4 = ctx.$implicit;\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r3.view(row_r2, rowHeader_r4), i0.ɵɵsanitizeHtml);\n} }\nfunction SubmissionGridBodyComponent_ng_template_0_tr_1_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 1);\n    i0.ɵɵlistener(\"click\", function SubmissionGridBodyComponent_ng_template_0_tr_1_Template_tr_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r7); const row_r2 = restoredCtx.$implicit; const ctx_r6 = i0.ɵɵnextContext(2); return ctx_r6.onRowSelect($event, row_r2); });\n    i0.ɵɵtemplate(1, SubmissionGridBodyComponent_ng_template_0_tr_1_td_1_Template, 1, 1, \"td\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.header.headers);\n} }\nfunction SubmissionGridBodyComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, SubmissionGridBodyComponent_ng_template_0_tr_1_Template, 2, 1, \"tr\", 0);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.rows);\n} }\nclass SubmissionGridBodyComponent extends GridBodyComponent {\n    load(formio, query) {\n        query = query || {};\n        return formio.loadSubmissions({ params: query })\n            .then((submissions) => this.setRows(query, submissions));\n    }\n    /**\n     * Render the cell data.\n     *\n     * @param submission\n     * @param header\n     * @return any\n     */\n    view(submission, header) {\n        const cellValue = get(submission, header.key);\n        if (header.renderCell) {\n            return header.renderCell(cellValue, header.component);\n        }\n        else {\n            if (header.component) {\n                if (header.component.getView) {\n                    return header.component.getView(cellValue);\n                }\n                return header.component.asString(cellValue);\n            }\n            else {\n                return cellValue.toString();\n            }\n        }\n    }\n}\nSubmissionGridBodyComponent.ɵfac = /*@__PURE__*/ function () { let ɵSubmissionGridBodyComponent_BaseFactory; return function SubmissionGridBodyComponent_Factory(t) { return (ɵSubmissionGridBodyComponent_BaseFactory || (ɵSubmissionGridBodyComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SubmissionGridBodyComponent)))(t || SubmissionGridBodyComponent); }; }();\nSubmissionGridBodyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SubmissionGridBodyComponent, selectors: [[\"ng-component\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"innerHTML\", 4, \"ngFor\", \"ngForOf\"], [3, \"innerHTML\"]], template: function SubmissionGridBodyComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, SubmissionGridBodyComponent_ng_template_0_Template, 2, 1, \"ng-template\");\n    } }, directives: [i1.NgForOf], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SubmissionGridBodyComponent, [{\n        type: Component,\n        args: [{ template: \"<ng-template>\\n  <tbody>\\n    <tr *ngFor=\\\"let row of rows\\\" (click)=\\\"onRowSelect($event, row)\\\">\\n      <td *ngFor=\\\"let rowHeader of header.headers\\\" [innerHTML]=\\\"view(row, rowHeader)\\\"></td>\\n    </tr>\\n  </tbody>\\n</ng-template>\\n\" }]\n    }], null, null); })();\n\nfunction SubmissionGridFooterComponent_ng_template_0_thead_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 3);\n    i0.ɵɵelementContainer(1, 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    i0.ɵɵnextContext(2);\n    const _r2 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r2);\n} }\nfunction SubmissionGridFooterComponent_ng_template_0_tfoot_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tfoot\", 3);\n    i0.ɵɵelementContainer(1, 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    i0.ɵɵnextContext(2);\n    const _r2 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r2);\n} }\nfunction SubmissionGridFooterComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵtemplate(0, SubmissionGridFooterComponent_ng_template_0_thead_0_Template, 2, 1, \"thead\", 2);\n    i0.ɵɵtemplate(1, SubmissionGridFooterComponent_ng_template_0_tfoot_1_Template, 2, 1, \"tfoot\", 2);\n} if (rf & 2) {\n    const position_r4 = ctx.position;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", position_r4 === ctx_r1.footerPositions.top);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", position_r4 === ctx_r1.footerPositions.bottom);\n} }\nfunction SubmissionGridFooterComponent_ng_template_2_td_1_button_1_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function SubmissionGridFooterComponent_ng_template_2_td_1_button_1_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(3); return ctx_r9.createItem.emit(\"form\"); });\n    i0.ɵɵelement(1, \"em\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.createText, \"\");\n} }\nfunction SubmissionGridFooterComponent_ng_template_2_td_1_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵtemplate(1, SubmissionGridFooterComponent_ng_template_2_td_1_button_1_Template, 3, 1, \"button\", 7);\n    i0.ɵɵelementStart(2, \"span\", 8)(3, \"span\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"pagination\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function SubmissionGridFooterComponent_ng_template_2_td_1_Template_pagination_ngModelChange_6_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(2); return ctx_r11.body.skip = $event; })(\"pageChanged\", function SubmissionGridFooterComponent_ng_template_2_td_1_Template_pagination_pageChanged_6_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r13 = i0.ɵɵnextContext(2); return ctx_r13.pageChanged.emit($event); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"colSpan\", ctx_r7.header.numHeaders);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.actionAllowed(\"submissionCreate\") && ctx_r7.createText);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r7.body.firstItem, \" - \", ctx_r7.body.lastItem, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" / \", ctx_r7.body.total, \" total\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"totalItems\", ctx_r7.body.total)(\"itemsPerPage\", ctx_r7.body.limit)(\"ngModel\", ctx_r7.body.skip)(\"maxSize\", ctx_r7.size);\n} }\nfunction SubmissionGridFooterComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, SubmissionGridFooterComponent_ng_template_2_td_1_Template, 7, 9, \"td\", 5);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.header);\n} }\nclass SubmissionGridFooterComponent extends GridFooterComponent {\n    constructor() {\n        super();\n    }\n    ngOnInit() {\n        if (!this.size) {\n            this.size = 7;\n        }\n    }\n}\nSubmissionGridFooterComponent.ɵfac = function SubmissionGridFooterComponent_Factory(t) { return new (t || SubmissionGridFooterComponent)(); };\nSubmissionGridFooterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SubmissionGridFooterComponent, selectors: [[\"ng-component\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 4, vars: 0, consts: [[\"footer\", \"\"], [\"defaultFooterTemplate\", \"\"], [\"class\", \"formio-grid-footer\", 4, \"ngIf\"], [1, \"formio-grid-footer\"], [3, \"ngTemplateOutlet\"], [3, \"colSpan\", 4, \"ngIf\"], [3, \"colSpan\"], [\"class\", \"btn btn-primary pull-left float-left\", 3, \"click\", 4, \"ngIf\"], [1, \"pull-right\", \"float-right\", \"item-counter\"], [1, \"page-num\"], [1, \"justify-content-center\", \"pagination-sm\", 3, \"totalItems\", \"itemsPerPage\", \"ngModel\", \"maxSize\", \"ngModelChange\", \"pageChanged\"], [1, \"btn\", \"btn-primary\", \"pull-left\", \"float-left\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-plus\", \"fa\", \"fa-plus\"]], template: function SubmissionGridFooterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, SubmissionGridFooterComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, SubmissionGridFooterComponent_ng_template_2_Template, 2, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    } }, directives: [i1.NgIf, i1.NgTemplateOutlet, i2$1.PaginationComponent, i3.NgControlStatus, i3.NgModel], styles: [\"tfoot.formio-grid-footer td{padding:.3rem}tfoot.formio-grid-footer .page-num{font-size:1.4em}tfoot.formio-grid-footer ul.pagination{margin-top:5px;margin-bottom:0}\\n\"], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SubmissionGridFooterComponent, [{\n        type: Component,\n        args: [{ encapsulation: ViewEncapsulation.None, template: \"<ng-template #footer let-position=\\\"position\\\">\\n  <thead class=\\\"formio-grid-footer\\\" *ngIf=\\\"position === footerPositions.top\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"defaultFooterTemplate\\\"></ng-container>\\n  </thead>\\n  <tfoot class=\\\"formio-grid-footer\\\" *ngIf=\\\"position === footerPositions.bottom\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"defaultFooterTemplate\\\"></ng-container>\\n  </tfoot>\\n</ng-template>\\n\\n<ng-template #defaultFooterTemplate>\\n  <tr>\\n    <td *ngIf=\\\"header\\\" [colSpan]=\\\"header.numHeaders\\\">\\n      <button *ngIf=\\\"actionAllowed('submissionCreate') && createText\\\" class=\\\"btn btn-primary pull-left float-left\\\" (click)=\\\"createItem.emit('form')\\\"><em class=\\\"glyphicon glyphicon-plus fa fa-plus\\\"></em> {{ createText }}</button>\\n      <span class=\\\"pull-right float-right item-counter\\\"><span class=\\\"page-num\\\">{{ body.firstItem }} - {{ body.lastItem }}</span> / {{ body.total }} total</span>\\n      <pagination [totalItems]=\\\"body.total\\\" [itemsPerPage]=\\\"body.limit\\\" [(ngModel)]=\\\"body.skip\\\" (pageChanged)=\\\"pageChanged.emit($event)\\\" [maxSize]=\\\"size\\\" class=\\\"justify-content-center pagination-sm\\\"></pagination>\\n    </td>\\n  </tr>\\n</ng-template>\\n\", styles: [\"tfoot.formio-grid-footer td{padding:.3rem}tfoot.formio-grid-footer .page-num{font-size:1.4em}tfoot.formio-grid-footer ul.pagination{margin-top:5px;margin-bottom:0}\\n\"] }]\n    }], function () { return []; }, null); })();\n\nvar SubmissionComponents = {\n    header: SubmissionGridHeaderComponent,\n    body: SubmissionGridBodyComponent,\n    footer: SubmissionGridFooterComponent\n};\n\nconst _c0 = [\"headerTemplate\"];\nconst _c1 = [\"bodyTemplate\"];\nconst _c2 = [\"footerTemplate\"];\nfunction FormioGridComponent_ng_template_0_Template(rf, ctx) { }\nfunction FormioGridComponent_ng_template_2_Template(rf, ctx) { }\nfunction FormioGridComponent_ng_template_4_Template(rf, ctx) { }\nconst _c3 = function (a0, a1) { return { position: a0, label: a1 }; };\nfunction FormioGridComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainer(0, 9);\n} if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.footer.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c3, ctx_r6.footerPositions.top, ctx_r6.label));\n} }\nfunction FormioGridComponent_ng_container_10_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainer(0, 10);\n} if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.header.template);\n} }\nfunction FormioGridComponent_ng_container_12_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainer(0, 10);\n} if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r8.body.template);\n} }\nfunction FormioGridComponent_ng_container_13_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainer(0, 9);\n} if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.footer.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c3, ctx_r9.footerPositions.bottom, ctx_r9.label));\n} }\nconst _c4 = function (a0, a1) { return [a0, a1]; };\nclass FormioGridComponent {\n    constructor(alerts, resolver, ref) {\n        this.alerts = alerts;\n        this.resolver = resolver;\n        this.ref = ref;\n        this.footerPosition = GridFooterPositions.bottom;\n        this.page = 0;\n        this.isLoading = false;\n        this.initialized = false;\n        this.footerPositions = GridFooterPositions;\n        this.select = this.rowSelect = new EventEmitter();\n        this.rowAction = new EventEmitter();\n        this.createItem = new EventEmitter();\n        this.error = new EventEmitter();\n        this.isLoading = true;\n    }\n    createComponent(property, component) {\n        const factory = this.resolver.resolveComponentFactory(component);\n        const componentRef = property.createComponent(factory);\n        return componentRef.instance;\n    }\n    loadGrid(src) {\n        // If no source is provided, then skip.\n        if (!src && !this.formio) {\n            return;\n        }\n        // Do not double load.\n        if (this.formio && this.src && (src === this.src)) {\n            return;\n        }\n        if (src) {\n            this.src = src;\n            this.formio = new FormioPromiseService(this.src, { formOnly: true });\n        }\n        // Load the header.\n        this.header.load(this.formio, {}, this.columns)\n            .then(() => this.setPage(0))\n            .catch(error => this.onError(error));\n    }\n    ngOnInit() {\n        // Create our components.\n        const comps = this.components || ((this.gridType === 'form') ? FormComponents : SubmissionComponents);\n        this.header = this.createComponent(this.headerElement, comps.header);\n        this.header.actionAllowed = this.actionAllowed.bind(this);\n        this.header.sort.subscribe(header => this.sortColumn(header));\n        this.body = this.createComponent(this.bodyElement, comps.body);\n        this.body.header = this.header;\n        this.body.actionAllowed = this.actionAllowed.bind(this);\n        this.body.rowSelect.subscribe(row => this.rowSelect.emit(row));\n        this.body.rowAction.subscribe(action => this.rowAction.emit(action));\n        this.footer = this.createComponent(this.footerElement, comps.footer);\n        this.footer.header = this.header;\n        this.footer.body = this.body;\n        this.footer.actionAllowed = this.actionAllowed.bind(this);\n        this.footer.createText = this.createText;\n        this.footer.size = this.size;\n        this.footer.pageChanged.subscribe(page => this.pageChanged(page));\n        this.footer.createItem.subscribe(item => this.createItem.emit(item));\n    }\n    ngOnChanges(changes) {\n        if (this.initialized) {\n            if ((changes.src && changes.src.currentValue) ||\n                (changes.formio && changes.formio.currentValue)) {\n                this.loadGrid(changes.src.currentValue);\n            }\n            if (changes.items && changes.items.currentValue) {\n                this.refreshGrid();\n            }\n        }\n        if (this.footer &&\n            (changes.createText && changes.createText.currentValue)) {\n            this.footer.createText = changes.createText.currentValue;\n        }\n    }\n    ngAfterViewInit() {\n        this.alerts.setAlerts([]);\n        this.query = this.query || {};\n        if (this.refresh) {\n            this.refresh.subscribe((query) => this.refreshGrid(query));\n        }\n        this.loadGrid(this.src);\n        this.initialized = true;\n        this.ref.detectChanges();\n    }\n    actionAllowed(action) {\n        if (this.isActionAllowed) {\n            return this.isActionAllowed(action);\n        }\n        else {\n            return true;\n        }\n    }\n    onError(error) {\n        this.isLoading = false;\n        this.error.emit(error);\n        if (typeof error === 'string' || error.message) {\n            this.alerts.setAlert({\n                type: 'danger',\n                message: error.message || error\n            });\n        }\n    }\n    refreshGrid(query) {\n        this.alerts.setAlerts([]);\n        this.query = query || this.query;\n        if (!this.query.hasOwnProperty('limit')) {\n            this.query.limit = 10;\n        }\n        if (!this.query.hasOwnProperty('skip')) {\n            this.query.skip = 0;\n        }\n        this.isLoading = true;\n        this.ref.detectChanges();\n        Formio.cache = {};\n        let loader = null;\n        if (this.items) {\n            loader = Promise.resolve(this.body.setRows(this.query, this.items));\n        }\n        else {\n            loader = this.body.load(this.formio, this.query);\n        }\n        return loader.then(info => {\n            this.isLoading = false;\n            this.initialized = true;\n            this.ref.detectChanges();\n        }).catch(error => this.onError(error));\n    }\n    setPage(num = -1) {\n        this.page = num !== -1 ? num : this.page;\n        if (!this.query.hasOwnProperty('limit')) {\n            this.query.limit = 10;\n        }\n        if (!this.query.hasOwnProperty('skip')) {\n            this.query.skip = 0;\n        }\n        this.query.skip = this.page * this.query.limit;\n        this.refreshGrid();\n    }\n    sortColumn(header) {\n        // Reset all other column sorts.\n        each(this.header.headers, (col) => {\n            if (col.key !== header.key) {\n                col.sort = '';\n            }\n        });\n        switch (header.sort) {\n            case 'asc':\n                header.sort = SortType.DESC;\n                this.query.sort = '-' + header.key;\n                break;\n            case 'desc':\n                header.sort = undefined;\n                delete this.query.sort;\n                break;\n            case undefined:\n                header.sort = SortType.ASC;\n                this.query.sort = header.key;\n                break;\n        }\n        this.refreshGrid();\n    }\n    pageChanged(page) {\n        this.setPage(page.page - 1);\n    }\n}\nFormioGridComponent.ɵfac = function FormioGridComponent_Factory(t) { return new (t || FormioGridComponent)(i0.ɵɵdirectiveInject(i1$1.FormioAlerts), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\nFormioGridComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FormioGridComponent, selectors: [[\"formio-grid\"]], viewQuery: function FormioGridComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n        i0.ɵɵviewQuery(_c1, 7, ViewContainerRef);\n        i0.ɵɵviewQuery(_c2, 7, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.bodyElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerElement = _t.first);\n    } }, inputs: { footerPosition: \"footerPosition\", src: \"src\", items: \"items\", onForm: \"onForm\", query: \"query\", refresh: \"refresh\", columns: \"columns\", gridType: \"gridType\", size: \"size\", components: \"components\", formio: \"formio\", label: \"label\", createText: \"createText\", isActionAllowed: \"isActionAllowed\" }, outputs: { select: \"select\", rowSelect: \"rowSelect\", rowAction: \"rowAction\", createItem: \"createItem\", error: \"error\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 14, vars: 12, consts: [[\"headerTemplate\", \"\"], [\"bodyTemplate\", \"\"], [\"footerTemplate\", \"\"], [1, \"formio-grid\"], [3, \"alerts\"], [1, \"table\", \"table-bordered\", \"table-striped\", \"table-hover\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"isLoading\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngTemplateOutlet\"]], template: function FormioGridComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, FormioGridComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, FormioGridComponent_ng_template_2_Template, 0, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(4, FormioGridComponent_ng_template_4_Template, 0, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelement(7, \"formio-alerts\", 4);\n        i0.ɵɵelementStart(8, \"table\", 5);\n        i0.ɵɵtemplate(9, FormioGridComponent_ng_container_9_Template, 1, 5, \"ng-container\", 6);\n        i0.ɵɵtemplate(10, FormioGridComponent_ng_container_10_Template, 1, 1, \"ng-container\", 7);\n        i0.ɵɵelement(11, \"formio-loader\", 8);\n        i0.ɵɵtemplate(12, FormioGridComponent_ng_container_12_Template, 1, 1, \"ng-container\", 7);\n        i0.ɵɵtemplate(13, FormioGridComponent_ng_container_13_Template, 1, 5, \"ng-container\", 6);\n        i0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"alerts\", ctx.alerts);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized && i0.ɵɵpureFunction2(6, _c4, ctx.footerPositions.top, ctx.footerPositions.both).indexOf(ctx.footerPosition) !== -1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"isLoading\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.initialized && i0.ɵɵpureFunction2(9, _c4, ctx.footerPositions.bottom, ctx.footerPositions.both).indexOf(ctx.footerPosition) !== -1);\n    } }, directives: [i1$1.FormioAlertsComponent, i1.NgIf, i1.NgTemplateOutlet, i1$1.FormioLoaderComponent], styles: [\".formio-grid[_ngcontent-%COMP%]{position:relative;width:100%}.grid-refresh[_ngcontent-%COMP%]{height:400px;width:100%}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormioGridComponent, [{\n        type: Component,\n        args: [{ selector: 'formio-grid', template: \"<ng-template #headerTemplate></ng-template>\\n<ng-template #bodyTemplate></ng-template>\\n<ng-template #footerTemplate></ng-template>\\n<div class=\\\"formio-grid\\\">\\n  <formio-alerts [alerts]=\\\"alerts\\\"></formio-alerts>\\n  <table class=\\\"table table-bordered table-striped table-hover\\\">\\n    <ng-container *ngIf=\\\"initialized && [footerPositions.top, footerPositions.both].indexOf(footerPosition) !== -1\\\"\\n      [ngTemplateOutlet]=\\\"footer.template\\\" [ngTemplateOutletContext]=\\\"{ position: footerPositions.top, label: label }\\\">\\n    </ng-container>\\n    <ng-container *ngIf=\\\"initialized\\\"\\n      [ngTemplateOutlet]=\\\"header.template\\\"></ng-container>\\n    <formio-loader [isLoading]=\\\"isLoading\\\"></formio-loader>\\n    <ng-container *ngIf=\\\"initialized\\\" [ngTemplateOutlet]=\\\"body.template\\\"></ng-container>\\n    <ng-container *ngIf=\\\"initialized && [footerPositions.bottom, footerPositions.both].indexOf(footerPosition) !== -1\\\"\\n      [ngTemplateOutlet]=\\\"footer.template\\\" [ngTemplateOutletContext]=\\\"{ position: footerPositions.bottom, label: label }\\\">\\n    </ng-container>\\n  </table>\\n</div>\\n\", styles: [\".formio-grid{position:relative;width:100%}.grid-refresh{height:400px;width:100%}\\n\"] }]\n    }], function () { return [{ type: i1$1.FormioAlerts }, { type: i0.ComponentFactoryResolver }, { type: i0.ChangeDetectorRef }]; }, { footerPosition: [{\n            type: Input\n        }], src: [{\n            type: Input\n        }], items: [{\n            type: Input\n        }], onForm: [{\n            type: Input\n        }], query: [{\n            type: Input\n        }], refresh: [{\n            type: Input\n        }], columns: [{\n            type: Input\n        }], gridType: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], components: [{\n            type: Input\n        }], formio: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], createText: [{\n            type: Input\n        }], isActionAllowed: [{\n            type: Input\n        }], select: [{\n            type: Output\n        }], rowSelect: [{\n            type: Output\n        }], rowAction: [{\n            type: Output\n        }], createItem: [{\n            type: Output\n        }], error: [{\n            type: Output\n        }], headerElement: [{\n            type: ViewChild,\n            args: ['headerTemplate', { read: ViewContainerRef, static: true }]\n        }], bodyElement: [{\n            type: ViewChild,\n            args: ['bodyTemplate', { read: ViewContainerRef, static: true }]\n        }], footerElement: [{\n            type: ViewChild,\n            args: ['footerTemplate', { read: ViewContainerRef, static: true }]\n        }] }); })();\n\nclass FormioGrid {\n}\nFormioGrid.ɵfac = function FormioGrid_Factory(t) { return new (t || FormioGrid)(); };\nFormioGrid.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FormioGrid });\nFormioGrid.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\n        FormioAlerts,\n        GridService\n    ], imports: [[\n            CommonModule,\n            FormsModule,\n            FormioModule,\n            RouterModule,\n            PaginationModule.forRoot()\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormioGrid, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    FormioModule,\n                    RouterModule,\n                    PaginationModule.forRoot()\n                ],\n                declarations: [\n                    FormioGridComponent,\n                    FormGridHeaderComponent,\n                    FormGridBodyComponent,\n                    FormGridFooterComponent,\n                    SubmissionGridHeaderComponent,\n                    SubmissionGridBodyComponent,\n                    SubmissionGridFooterComponent,\n                    GridHeaderComponent,\n                    GridBodyComponent,\n                    GridFooterComponent,\n                    TimeSince\n                ],\n                exports: [\n                    FormioGridComponent\n                ],\n                entryComponents: [\n                    FormGridHeaderComponent,\n                    FormGridBodyComponent,\n                    FormGridFooterComponent,\n                    SubmissionGridHeaderComponent,\n                    SubmissionGridBodyComponent,\n                    SubmissionGridFooterComponent\n                ],\n                providers: [\n                    FormioAlerts,\n                    GridService\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FormioGrid, { declarations: [FormioGridComponent,\n        FormGridHeaderComponent,\n        FormGridBodyComponent,\n        FormGridFooterComponent,\n        SubmissionGridHeaderComponent,\n        SubmissionGridBodyComponent,\n        SubmissionGridFooterComponent,\n        GridHeaderComponent,\n        GridBodyComponent,\n        GridFooterComponent,\n        TimeSince], imports: [CommonModule,\n        FormsModule,\n        FormioModule,\n        RouterModule, i2$1.PaginationModule], exports: [FormioGridComponent] }); })();\n\n/*\n * Public API Surface of angular-formio\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormGridBodyComponent, FormGridFooterComponent, FormGridHeaderComponent, FormioGrid, FormioGridComponent, GridBodyComponent, GridFooterComponent, GridHeaderComponent, GridService, SubmissionGridBodyComponent, SubmissionGridFooterComponent, SubmissionGridHeaderComponent };\n//# sourceMappingURL=formio-angular-grid.mjs.map\n","map":{"version":3,"file":"formio-angular-grid.mjs","sources":["../../../projects/angular-formio/grid/src/types/grid-footer-positions.ts","../../../projects/angular-formio/grid/src/GridHeaderComponent.ts","../../../projects/angular-formio/grid/src/types/grid-header.ts","../../../projects/angular-formio/grid/src/form/FormGridHeader.component.html","../../../projects/angular-formio/grid/src/form/FormGridHeader.component.ts","../../../projects/angular-formio/grid/src/grid.service.ts","../../../projects/angular-formio/grid/src/GridBodyComponent.ts","../../../projects/angular-formio/grid/src/form/time-since.pipe.ts","../../../projects/angular-formio/grid/src/form/FormGridBody.component.html","../../../projects/angular-formio/grid/src/form/FormGridBody.component.ts","../../../projects/angular-formio/grid/src/GridFooterComponent.ts","../../../projects/angular-formio/grid/src/form/FormGridFooter.component.html","../../../projects/angular-formio/grid/src/form/FormGridFooter.component.ts","../../../projects/angular-formio/grid/src/form/index.ts","../../../projects/angular-formio/grid/src/submission/SubmissionGridHeader.component.html","../../../projects/angular-formio/grid/src/submission/SubmissionGridHeader.component.ts","../../../projects/angular-formio/grid/src/submission/SubmissionGridBody.component.html","../../../projects/angular-formio/grid/src/submission/SubmissionGridBody.component.ts","../../../projects/angular-formio/grid/src/submission/SubmissionGridFooter.component.html","../../../projects/angular-formio/grid/src/submission/SubmissionGridFooter.component.ts","../../../projects/angular-formio/grid/src/submission/index.ts","../../../projects/angular-formio/grid/src/grid.component.html","../../../projects/angular-formio/grid/src/grid.component.ts","../../../projects/angular-formio/grid/src/grid.module.ts","../../../projects/angular-formio/grid/src/public_api.ts","../../../projects/angular-formio/grid/src/formio-angular-grid.ts"],"sourcesContent":["export enum GridFooterPositions {\n  bottom,\n  top,\n  both\n}\n","import { Output, EventEmitter, ViewChild, TemplateRef, Input, Component } from '@angular/core';\nimport {FormioPromiseService} from '@formio/angular';\nimport {GridHeader} from './types/grid-header';\n\n@Component({\n  template: ''\n})\nexport class GridHeaderComponent {\n  @Input() actionAllowed: any;\n  @Output() sort: EventEmitter<GridHeader>;\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n  public headers: Array<GridHeader>;\n  constructor() {\n    this.headers = [];\n    this.sort = new EventEmitter();\n  }\n\n  get numHeaders() {\n    return this.headers.length;\n  }\n\n  load(formio: FormioPromiseService, query?: any, columns?: Array<any>): Promise<any> {\n    return Promise.resolve([]);\n  }\n}\n","import {ComponentInstance} from '@formio/angular';\n\nexport interface GridHeader {\n  component?: ComponentInstance;\n  key: string;\n  sort?: SortType;\n  label: string;\n  renderCell?(cellValue: any, component?: ComponentInstance): string;\n}\n\nexport enum SortType {\n  ASC = 'asc',\n  DESC = 'desc'\n}\n","<ng-template>\n  <thead>\n    <tr>\n      <th>\n        <div class=\"row\">\n          <div class=\"col-sm-8\">\n            <a (click)=\"sort.emit(header)\">\n              {{ header.label }}&nbsp;<span [ngClass]=\"{'glyphicon-triangle-top fa-caret-up': (header.sort === 'asc'), 'glyphicon-triangle-bottom fa-caret-down': (header.sort === 'desc')}\" class=\"glyphicon fa\" *ngIf=\"header.sort\"></span>\n            </a>\n          </div>\n          <div class=\"col-sm-4\">\n            Operations\n          </div>\n        </div>\n      </th>\n    </tr>\n  </thead>\n</ng-template>\n","import {Component} from '@angular/core';\nimport {GridHeaderComponent} from '../GridHeaderComponent';\nimport {GridHeader, SortType} from '../types/grid-header';\n\n@Component({\n  selector: 'form-grid-header',\n  templateUrl: './FormGridHeader.component.html'\n})\nexport class FormGridHeaderComponent extends GridHeaderComponent {\n  public header: GridHeader;\n  load(formio?: any) {\n    this.header = {\n      label: 'Title',\n      key: 'title',\n      sort: SortType.ASC\n    };\n    this.headers = [this.header];\n    return Promise.resolve(this.headers);\n  }\n\n  get numHeaders() {\n    return 2;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport _intersection from 'lodash/intersection';\n\n@Injectable()\nexport class GridService {\n  public rows: Array<any>;\n  constructor() {}\n\n  setRows(rows) {\n    this.rows = rows;\n  }\n\n  getFormsPerPage() {\n    return this.rows?.length;\n  }\n}\n","import { Input, Output, EventEmitter, ViewChild, TemplateRef, Component } from '@angular/core';\nimport { each, clone } from 'lodash';\nimport { GridHeaderComponent } from './GridHeaderComponent';\nimport { GridService } from './grid.service';\nimport {FormioPromiseService} from '@formio/angular';\n\n@Component({\n  template: ''\n})\nexport class GridBodyComponent {\n  @Input() header: GridHeaderComponent;\n  @Input() actionAllowed: any;\n  @Output() rowSelect: EventEmitter<any>;\n  @Output() rowAction: EventEmitter<any>;\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n  public rows: Array<any>;\n  public loading: Boolean;\n  public firstItem = 0;\n  public lastItem = 0;\n  public skip = 0;\n  public limit = 0;\n  public total = 0;\n  constructor(public service: GridService) {\n    this.rowSelect = new EventEmitter();\n    this.rowAction = new EventEmitter();\n    this.loading = true;\n  }\n\n  load(formio: FormioPromiseService, query?: any): Promise<any> {\n    return formio.loadForm(query);\n  }\n\n  onRowSelect(event, row) {\n    event.preventDefault();\n    this.rowSelect.emit(row);\n  }\n\n  onRowAction(event, row, action) {\n    event.preventDefault();\n    this.rowAction.emit({ row, action });\n  }\n\n  /**\n   * Set the rows for this Grid body.\n   *\n   * @param query\n   * @param items\n   * @return any\n   */\n  setRows(query: any, items: any) {\n    this.rows = [];\n\n    if (typeof items !== 'object') {\n      this.firstItem = 0;\n      this.lastItem = 0;\n      this.total = 0;\n      this.skip = 0;\n      this.loading = false;\n      this.service.setRows(this.rows);\n      \n      return this.rows;\n    }\n\n    this.firstItem = query.skip + 1;\n    this.lastItem = this.firstItem + items.length - 1;\n    if (this.lastItem === 0) {\n      this.firstItem = 0;\n    }\n    this.total = items.serverCount;\n    this.limit = query.limit;\n    this.skip = Math.floor(items.skip / query.limit) + 1;\n    this.loading = false;\n    each(items, (item: any) => {\n      this.rows.push(clone(item));\n    });\n    this.service.setRows(this.rows);\n\n    return this.rows;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeSince'\n})\nexport class TimeSince implements PipeTransform {\n  transform(date: Date): string {\n    const elapsed = (new Date().getTime() - new Date(date).getTime()) / 1000;\n    let interval;\n    if (interval >= 1) {\n      return interval + ' year' + (interval > 1 ? 's' : '');\n    }\n    interval = Math.floor(elapsed / 2592000);\n    if (interval >= 1){\n      return interval + ' month' + (interval > 1 ? 's' : '');\n    }\n    interval = Math.floor(elapsed / 86400);\n    if (interval >= 1) {\n      return interval + ' day' + (interval > 1 ? 's' : '');\n    }\n    interval = Math.floor(elapsed / 3600);\n    if (interval >= 1) {\n      return interval + ' hour' + (interval > 1 ? 's' : '');\n    }\n    interval = Math.floor(elapsed / 60);\n    if (interval >= 1) {\n      return interval + ' minute' + (interval > 1 ? 's' : '');\n    }\n    return Math.floor(elapsed) + ' second' + (elapsed > 1 ? 's' : '');\n  }\n}","<ng-template>\n  <tbody *ngIf=\"rows\">\n    <tr *ngFor=\"let form of rows\">\n      <td>\n        <div class=\"row\">\n          <div class=\"col-sm-8\">\n            <a routerLink=\"{{form._id}}/view\" (click)=\"onRowSelect($event, form)\"><h5>{{ form.title }}</h5></a>\n            <div class=\"form-updated small text-muted\">\n              Updated {{ form.modified | timeSince }} ago\n            </div>\n          </div>\n          <div class=\"col-sm-4\">\n            <button *ngIf=\"actionAllowed('formView')\" class=\"btn btn-outline-secondary btn-sm form-btn form-btn-use\" (click)=\"onRowAction($event, form, 'view')\"><span class=\"fa fa-pencil\"></span> Enter Data</button>&nbsp;\n            <button *ngIf=\"actionAllowed('formSubmission')\" class=\"btn btn-outline-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'submission')\"><span class=\"fa fa-list-alt\"></span> View Data</button>&nbsp;\n            <button *ngIf=\"actionAllowed('formEdit')\" class=\"btn btn-outline-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'edit')\"><span class=\"fa fa-edit\"></span> Edit Form</button>&nbsp;\n            <button *ngIf=\"actionAllowed('formPermission')\" class=\"btn btn-outline-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'permissions')\"><span class=\"fa fa-lock\"></span> Permissions</button>&nbsp;\n            <button *ngIf=\"actionAllowed('formDelete')\" class=\"btn btn-danger btn-sm form-btn form-btn-delete\" (click)=\"onRowAction($event, form, 'delete')\" title=\"Delete form\"><span class=\"fa fa-trash\"></span></button>\n          </div>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { GridBodyComponent } from '../GridBodyComponent';\nimport { FormioPromiseService } from '@formio/angular';\n\n@Component({\n  selector: 'form-grid-body',\n  styleUrls: ['./FormGridBody.component.scss'],\n  templateUrl: './FormGridBody.component.html'\n})\nexport class FormGridBodyComponent extends GridBodyComponent {\n  load(formio: FormioPromiseService, query?: any) {\n    query = query || {};\n    return formio.loadForms({ params: query }).then((forms: any) => this.setRows(query, forms));\n  }\n}\n","import { GridFooterPositions } from './types/grid-footer-positions';\nimport { Input, Output, ViewChild, TemplateRef, EventEmitter, Component } from '@angular/core';\nimport { GridHeaderComponent } from './GridHeaderComponent';\nimport { GridBodyComponent } from './GridBodyComponent';\n\n@Component({\n  template: ''\n})\nexport class GridFooterComponent {\n  @Input() header: GridHeaderComponent;\n  @Input() body: GridBodyComponent;\n  @Input() createText: String;\n  @Input() size: number;\n  @Input() actionAllowed: any;\n  @Output() pageChanged: EventEmitter<any>;\n  @Output() createItem: EventEmitter<any>;\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n\n  public footerPositions = GridFooterPositions;\n\n  constructor() {\n    this.pageChanged = new EventEmitter();\n    this.createItem = new EventEmitter();\n  }\n}\n","<ng-template #footer let-position=\"position\" let-label=\"label\">\n  <thead class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.top\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\" [ngTemplateOutletContext]=\"{ label: label }\"></ng-container>\n  </thead>\n  <tfoot class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.bottom\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\" [ngTemplateOutletContext]=\"{ label: label }\"></ng-container>\n  </tfoot>\n</ng-template>\n\n<ng-template let-label=\"label\" #defaultFooterTemplate>\n  <tr>\n    <td *ngIf=\"header\" [colSpan]=\"header.numHeaders\">\n      <button *ngIf=\"actionAllowed('formCreate')\" class=\"btn btn-primary form-btn-use pull-left float-left\" (click)=\"createItem.emit('form')\"><em class=\"glyphicon glyphicon-plus fa fa-plus\"></em> {{ createText }}</button>\n      <span class=\"pull-right float-right item-counter\"><span class=\"page-num\">{{ body.firstItem }} - {{ body.lastItem }}</span> / {{ body.total }} total</span>\n      <span [attr.aria-label]=\"label\" role=\"navigation\">\n        <pagination [totalItems]=\"body.total\" [itemsPerPage]=\"body.limit\" [(ngModel)]=\"body.skip\" (pageChanged)=\"pageChanged.emit($event)\" [maxSize]=\"size\" class=\"justify-content-center pagination-sm\">\n        </pagination>\n      </span>\n    </td>\n  </tr>\n</ng-template>\n","import {Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { GridFooterComponent } from '../GridFooterComponent';\n\n@Component({\n  templateUrl: './FormGridFooter.component.html',\n  styleUrls: ['../grid.footer.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormGridFooterComponent extends GridFooterComponent implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (!this.createText) {\n      this.createText = 'Create Form';\n    }\n    if (!this.size) {\n      this.size = 7;\n    }\n  }\n}\n","import { FormGridHeaderComponent } from './FormGridHeader.component';\nimport { FormGridBodyComponent } from './FormGridBody.component';\nimport { FormGridFooterComponent } from './FormGridFooter.component';\nexport default {\n  header: FormGridHeaderComponent,\n  body: FormGridBodyComponent,\n  footer: FormGridFooterComponent\n};\n","<ng-template>\n  <thead>\n    <tr>\n      <th *ngFor=\"let header of headers\">\n        <a (click)=\"sort.emit(header)\">\n          {{ header.label }}&nbsp;<span [ngClass]=\"{'glyphicon-triangle-top': (header.sort === 'asc'), 'glyphicon-triangle-bottom': (header.sort === 'desc')}\" class=\"glyphicon\" *ngIf=\"header.sort\"></span>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</ng-template>\n","import {Component, EventEmitter} from '@angular/core';\nimport {Utils, Components, ExtendedComponentSchema} from 'formiojs';\nimport {GridHeaderComponent} from '../GridHeaderComponent';\nimport {FormioPromiseService} from '@formio/angular';\nimport {ComponentInstance, FormioForm} from '@formio/angular';\nimport {GridColumn} from '../types/grid-column';\nimport {GridHeader, SortType} from '../types/grid-header';\n\n@Component({\n  templateUrl: './SubmissionGridHeader.component.html'\n})\nexport class SubmissionGridHeaderComponent extends GridHeaderComponent {\n\n  // Map structure where the key is the path and the value is the component\n  formComponents: Map<string, ExtendedComponentSchema>;\n\n  load(formio: FormioPromiseService, query?: any, columns?: Array<GridColumn>) {\n    query = query || {};\n    return formio.loadForm({params: query}).then((form: FormioForm) => {\n      this.headers = [];\n      this.formComponents = new Map<string, ExtendedComponentSchema>();\n      this.setComponents(form.components);\n      columns ? columns.forEach(column => {\n          this.setHeader(this.getHeaderForColumn(column, this.formComponents.get(column.path)));\n        }) : this.setComponentsHeaders(this.formComponents);\n\n      return this.headers;\n    });\n  }\n\n  setHeader(header: GridHeader) {\n    this.headers.push(header);\n  }\n\n  getHeaderForColumn(column: GridColumn, component?: ExtendedComponentSchema, sort?: SortType) {\n    return {\n      label: column.label,\n      key: column.path,\n      sort: sort,\n      component: component ? Components.create(component, null, null, true) as ComponentInstance : undefined,\n      renderCell: column ? column.renderCell : undefined\n    };\n  }\n\n  getHeaderForComponent(component: ExtendedComponentSchema, path: string, sort?: SortType) {\n    return {\n      label: component.label,\n      key: path,\n      sort: sort,\n      component: component ? Components.create(component, null, null, true) as ComponentInstance : undefined,\n    };\n  }\n  // Set headers from components in case if columns are not provided\n  setComponentsHeaders(components: Map<string, ExtendedComponentSchema>, sort?: SortType) {\n    components.forEach((component, path) => {\n      if (\n        component.input &&\n        (!component.hasOwnProperty('tableView') || component.tableView)\n      ) {\n        this.setHeader(this.getHeaderForComponent(component, path, sort));\n      }\n    });\n  }\n\n  // Map components\n  setComponents(components) {\n    Utils.eachComponent(components, (component: ExtendedComponentSchema, newPath: string) => {\n      this.formComponents.set(`data.${newPath}`, component);\n    });\n  }\n}\n\n","<ng-template>\n  <tbody>\n    <tr *ngFor=\"let row of rows\" (click)=\"onRowSelect($event, row)\">\n      <td *ngFor=\"let rowHeader of header.headers\" [innerHTML]=\"view(row, rowHeader)\"></td>\n    </tr>\n  </tbody>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { each, get } from 'lodash';\nimport { GridBodyComponent } from '../GridBodyComponent';\nimport {FormioPromiseService} from '@formio/angular';\nimport { GridHeader } from '../types/grid-header';\nimport {FormioSubmission} from '@formio/angular';\n@Component({\n  templateUrl: './SubmissionGridBody.component.html'\n})\nexport class SubmissionGridBodyComponent extends GridBodyComponent {\n  load(formio: FormioPromiseService, query?: any) {\n    query = query || {};\n    return formio.loadSubmissions({ params: query })\n      .then((submissions: any) => this.setRows(query, submissions));\n  }\n\n  /**\n   * Render the cell data.\n   *\n   * @param submission\n   * @param header\n   * @return any\n   */\n  view(submission: FormioSubmission, header: GridHeader): string {\n    const cellValue: any = get(submission, header.key);\n    if (header.renderCell) {\n      return header.renderCell(cellValue, header.component);\n    } else {\n      if (header.component) {\n        if (header.component.getView) {\n          return header.component.getView(cellValue);\n        }\n        return header.component.asString(cellValue);\n      } else {\n        return cellValue.toString();\n      }\n    }\n  }\n}\n","<ng-template #footer let-position=\"position\">\n  <thead class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.top\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\"></ng-container>\n  </thead>\n  <tfoot class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.bottom\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\"></ng-container>\n  </tfoot>\n</ng-template>\n\n<ng-template #defaultFooterTemplate>\n  <tr>\n    <td *ngIf=\"header\" [colSpan]=\"header.numHeaders\">\n      <button *ngIf=\"actionAllowed('submissionCreate') && createText\" class=\"btn btn-primary pull-left float-left\" (click)=\"createItem.emit('form')\"><em class=\"glyphicon glyphicon-plus fa fa-plus\"></em> {{ createText }}</button>\n      <span class=\"pull-right float-right item-counter\"><span class=\"page-num\">{{ body.firstItem }} - {{ body.lastItem }}</span> / {{ body.total }} total</span>\n      <pagination [totalItems]=\"body.total\" [itemsPerPage]=\"body.limit\" [(ngModel)]=\"body.skip\" (pageChanged)=\"pageChanged.emit($event)\" [maxSize]=\"size\" class=\"justify-content-center pagination-sm\"></pagination>\n    </td>\n  </tr>\n</ng-template>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport { GridFooterComponent } from '../GridFooterComponent';\n\n@Component({\n  templateUrl: './SubmissionGridFooter.component.html',\n  styleUrls: ['../grid.footer.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SubmissionGridFooterComponent extends GridFooterComponent implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (!this.size) {\n      this.size = 7;\n    }\n  }\n}\n","import { SubmissionGridHeaderComponent } from './SubmissionGridHeader.component';\nimport { SubmissionGridBodyComponent } from './SubmissionGridBody.component';\nimport { SubmissionGridFooterComponent } from './SubmissionGridFooter.component';\nexport default {\n  header: SubmissionGridHeaderComponent,\n  body: SubmissionGridBodyComponent,\n  footer: SubmissionGridFooterComponent\n};\n","<ng-template #headerTemplate></ng-template>\n<ng-template #bodyTemplate></ng-template>\n<ng-template #footerTemplate></ng-template>\n<div class=\"formio-grid\">\n  <formio-alerts [alerts]=\"alerts\"></formio-alerts>\n  <table class=\"table table-bordered table-striped table-hover\">\n    <ng-container *ngIf=\"initialized && [footerPositions.top, footerPositions.both].indexOf(footerPosition) !== -1\"\n      [ngTemplateOutlet]=\"footer.template\" [ngTemplateOutletContext]=\"{ position: footerPositions.top, label: label }\">\n    </ng-container>\n    <ng-container *ngIf=\"initialized\"\n      [ngTemplateOutlet]=\"header.template\"></ng-container>\n    <formio-loader [isLoading]=\"isLoading\"></formio-loader>\n    <ng-container *ngIf=\"initialized\" [ngTemplateOutlet]=\"body.template\"></ng-container>\n    <ng-container *ngIf=\"initialized && [footerPositions.bottom, footerPositions.both].indexOf(footerPosition) !== -1\"\n      [ngTemplateOutlet]=\"footer.template\" [ngTemplateOutletContext]=\"{ position: footerPositions.bottom, label: label }\">\n    </ng-container>\n  </table>\n</div>\n","import { GridFooterPositions } from './types/grid-footer-positions';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport {FormioAlerts} from '@formio/angular';\nimport {each} from 'lodash';\nimport {Formio} from 'formiojs';\nimport {GridHeaderComponent} from './GridHeaderComponent';\nimport {GridBodyComponent} from './GridBodyComponent';\nimport {GridFooterComponent} from './GridFooterComponent';\nimport FormComponents from './form/index';\nimport SubmissionComponents from './submission/index';\nimport {FormioPromiseService} from '@formio/angular';\nimport {GridColumn} from './types/grid-column';\nimport {GridHeader, SortType} from './types/grid-header';\n\n@Component({\n  selector: 'formio-grid',\n  styleUrls: ['./grid.component.scss'],\n  templateUrl: './grid.component.html'\n})\nexport class FormioGridComponent implements OnChanges, OnInit, AfterViewInit {\n  @Input() footerPosition = GridFooterPositions.bottom;\n  @Input() src?: string;\n  @Input() items?: Array<any>;\n  @Input() onForm?: Promise<any>;\n  @Input() query?: any;\n  @Input() refresh?: EventEmitter<object>;\n  @Input() columns?: Array<GridColumn>;\n  @Input() gridType?: string;\n  @Input() size?: number;\n  @Input() components?: any;\n  @Input() formio?: FormioPromiseService;\n  @Input() label?: string;\n  @Input() createText: String;\n  @Input() isActionAllowed: any;\n  @Output() select: EventEmitter<object>;\n  @Output() rowSelect: EventEmitter<object>;\n  @Output() rowAction: EventEmitter<object>;\n  @Output() createItem: EventEmitter<any>;\n  @Output() error: EventEmitter<any>;\n  @ViewChild('headerTemplate', {read: ViewContainerRef, static: true}) headerElement: ViewContainerRef;\n  @ViewChild('bodyTemplate', {read: ViewContainerRef, static: true}) bodyElement: ViewContainerRef;\n  @ViewChild('footerTemplate', {read: ViewContainerRef, static: true}) footerElement: ViewContainerRef;\n\n  public page = 0;\n  public isLoading = false;\n  public initialized = false;\n  public header: GridHeaderComponent;\n  public body: GridBodyComponent;\n  public footer: GridFooterComponent;\n  public footerPositions = GridFooterPositions;\n\n  constructor(\n    public alerts: FormioAlerts,\n    private resolver: ComponentFactoryResolver,\n    private ref: ChangeDetectorRef\n  ) {\n    this.select = this.rowSelect = new EventEmitter();\n    this.rowAction = new EventEmitter();\n    this.createItem = new EventEmitter();\n    this.error = new EventEmitter();\n    this.isLoading = true;\n  }\n\n  createComponent(property, component) {\n    const factory = this.resolver.resolveComponentFactory(component);\n    const componentRef = property.createComponent(factory);\n    return componentRef.instance;\n  }\n\n  loadGrid(src?: string) {\n    // If no source is provided, then skip.\n    if (!src && !this.formio) {\n      return;\n    }\n    // Do not double load.\n    if (this.formio && this.src && (src === this.src)) {\n      return;\n    }\n\n    if (src) {\n      this.src = src;\n      this.formio = new FormioPromiseService(this.src, { formOnly: true });\n    }\n\n    // Load the header.\n    this.header.load(this.formio, {}, this.columns)\n      .then(() => this.setPage(0))\n      .catch(error => this.onError(error));\n  }\n\n  ngOnInit() {\n    // Create our components.\n    const comps = this.components || ((this.gridType === 'form') ? FormComponents : SubmissionComponents);\n\n    this.header = this.createComponent(this.headerElement, comps.header);\n    this.header.actionAllowed = this.actionAllowed.bind(this);\n    this.header.sort.subscribe(header => this.sortColumn(header));\n\n    this.body = this.createComponent(this.bodyElement, comps.body);\n    this.body.header = this.header;\n    this.body.actionAllowed = this.actionAllowed.bind(this);\n    this.body.rowSelect.subscribe(row => this.rowSelect.emit(row));\n    this.body.rowAction.subscribe(action => this.rowAction.emit(action));\n\n    this.footer = this.createComponent(this.footerElement, comps.footer);\n    this.footer.header = this.header;\n    this.footer.body = this.body;\n    this.footer.actionAllowed = this.actionAllowed.bind(this);\n    this.footer.createText = this.createText;\n    this.footer.size = this.size;\n    this.footer.pageChanged.subscribe(page => this.pageChanged(page));\n    this.footer.createItem.subscribe(item => this.createItem.emit(item));\n  }\n\n  ngOnChanges(changes: any) {\n    if (this.initialized) {\n      if (\n        (changes.src && changes.src.currentValue) ||\n        (changes.formio && changes.formio.currentValue)\n      ) {\n        this.loadGrid(changes.src.currentValue);\n      }\n\n      if (changes.items && changes.items.currentValue) {\n        this.refreshGrid();\n      }\n    }\n\n    if (this.footer &&\n        (changes.createText && changes.createText.currentValue)) {\n      this.footer.createText = changes.createText.currentValue;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.alerts.setAlerts([]);\n    this.query = this.query || {};\n    if (this.refresh) {\n      this.refresh.subscribe((query: object) => this.refreshGrid(query));\n    }\n    this.loadGrid(this.src);\n    this.initialized = true;\n    this.ref.detectChanges();\n  }\n\n  actionAllowed(action) {\n    if (this.isActionAllowed) {\n      return this.isActionAllowed(action);\n    } else {\n      return true;\n    }\n  }\n\n  onError(error: any) {\n    this.isLoading = false;\n    this.error.emit(error);\n    if (typeof error === 'string' || error.message) {\n      this.alerts.setAlert({\n        type: 'danger',\n        message: error.message || error\n      });\n    }\n  }\n\n  refreshGrid(query?: any) {\n    this.alerts.setAlerts([]);\n    this.query = query || this.query;\n    if (!this.query.hasOwnProperty('limit')) {\n      this.query.limit = 10;\n    }\n    if (!this.query.hasOwnProperty('skip')) {\n      this.query.skip = 0;\n    }\n    this.isLoading = true;\n    this.ref.detectChanges();\n    Formio.cache = {};\n    let loader = null;\n    if (this.items) {\n      loader = Promise.resolve(this.body.setRows(this.query, this.items));\n    } else {\n      loader = this.body.load(this.formio, this.query);\n    }\n\n    return loader.then(info => {\n      this.isLoading = false;\n      this.initialized = true;\n      this.ref.detectChanges();\n    }).catch(error => this.onError(error));\n  }\n\n  setPage(num = -1) {\n    this.page = num !== -1 ? num : this.page;\n    if (!this.query.hasOwnProperty('limit')) {\n      this.query.limit = 10;\n    }\n    if (!this.query.hasOwnProperty('skip')) {\n      this.query.skip = 0;\n    }\n    this.query.skip = this.page * this.query.limit;\n    this.refreshGrid();\n  }\n\n  sortColumn(header: GridHeader) {\n    // Reset all other column sorts.\n    each(this.header.headers, (col: any) => {\n      if (col.key !== header.key) {\n        col.sort = '';\n      }\n    });\n    switch (header.sort) {\n      case 'asc':\n        header.sort = SortType.DESC;\n        this.query.sort = '-' + header.key;\n        break;\n      case 'desc':\n        header.sort = undefined;\n        delete this.query.sort;\n        break;\n      case undefined:\n        header.sort = SortType.ASC;\n        this.query.sort = header.key;\n        break;\n    }\n    this.refreshGrid();\n  }\n\n  pageChanged(page: any) {\n    this.setPage(page.page - 1);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { FormioModule } from '@formio/angular';\nimport { FormioAlerts } from '@formio/angular';\nimport { FormioGridComponent } from './grid.component';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { FormGridHeaderComponent } from './form/FormGridHeader.component';\nimport { FormGridBodyComponent } from './form/FormGridBody.component';\nimport { FormGridFooterComponent } from './form/FormGridFooter.component';\nimport { SubmissionGridHeaderComponent } from './submission/SubmissionGridHeader.component';\nimport { SubmissionGridBodyComponent } from './submission/SubmissionGridBody.component';\nimport { SubmissionGridFooterComponent } from './submission/SubmissionGridFooter.component';\nimport { GridHeaderComponent } from './GridHeaderComponent';\nimport { GridBodyComponent } from './GridBodyComponent';\nimport { GridFooterComponent } from './GridFooterComponent';\nimport { GridService } from './grid.service';\nimport { TimeSince } from './form/time-since.pipe'\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    FormioModule,\n    RouterModule,\n    PaginationModule.forRoot()\n  ],\n  declarations: [\n    FormioGridComponent,\n    FormGridHeaderComponent,\n    FormGridBodyComponent,\n    FormGridFooterComponent,\n    SubmissionGridHeaderComponent,\n    SubmissionGridBodyComponent,\n    SubmissionGridFooterComponent,\n    GridHeaderComponent,\n    GridBodyComponent,\n    GridFooterComponent,\n    TimeSince\n  ],\n  exports: [\n    FormioGridComponent\n  ],\n  entryComponents: [\n    FormGridHeaderComponent,\n    FormGridBodyComponent,\n    FormGridFooterComponent,\n    SubmissionGridHeaderComponent,\n    SubmissionGridBodyComponent,\n    SubmissionGridFooterComponent\n  ],\n  providers: [\n    FormioAlerts,\n    GridService\n  ]\n})\nexport class FormioGrid {}\n","/*\n * Public API Surface of angular-formio\n */\n\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, TemplateRef, Component, Input, Output, ViewChild, Injectable, Pipe, ViewEncapsulation, ViewContainerRef, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i2 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i1$1 from '@formio/angular';\nimport { FormioPromiseService, FormioAlerts, FormioModule } from '@formio/angular';\nimport { each, clone, get } from 'lodash';\nimport { Components, Utils, Formio } from 'formiojs';\nimport * as i2$1 from 'ngx-bootstrap/pagination';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\n\nvar GridFooterPositions;\n(function (GridFooterPositions) {\n    GridFooterPositions[GridFooterPositions[\"bottom\"] = 0] = \"bottom\";\n    GridFooterPositions[GridFooterPositions[\"top\"] = 1] = \"top\";\n    GridFooterPositions[GridFooterPositions[\"both\"] = 2] = \"both\";\n})(GridFooterPositions || (GridFooterPositions = {}));\n\nclass GridHeaderComponent {\n    constructor() {\n        this.headers = [];\n        this.sort = new EventEmitter();\n    }\n    get numHeaders() {\n        return this.headers.length;\n    }\n    load(formio, query, columns) {\n        return Promise.resolve([]);\n    }\n}\nGridHeaderComponent.ɵfac = function GridHeaderComponent_Factory(t) { return new (t || GridHeaderComponent)(); };\nGridHeaderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: GridHeaderComponent, selectors: [[\"ng-component\"]], viewQuery: function GridHeaderComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(TemplateRef, 7);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        }\n    }, inputs: { actionAllowed: \"actionAllowed\" }, outputs: { sort: \"sort\" }, decls: 0, vars: 0, template: function GridHeaderComponent_Template(rf, ctx) { }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridHeaderComponent, [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], function () { return []; }, { actionAllowed: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }], template: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }] });\n})();\n\nvar SortType;\n(function (SortType) {\n    SortType[\"ASC\"] = \"asc\";\n    SortType[\"DESC\"] = \"desc\";\n})(SortType || (SortType = {}));\n\nconst _c0$3 = function (a0, a1) { return { \"glyphicon-triangle-top fa-caret-up\": a0, \"glyphicon-triangle-bottom fa-caret-down\": a1 }; };\nfunction FormGridHeaderComponent_ng_template_0_span_7_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"span\", 5);\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(1, _c0$3, ctx_r1.header.sort === \"asc\", ctx_r1.header.sort === \"desc\"));\n    }\n}\nfunction FormGridHeaderComponent_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"thead\")(1, \"tr\")(2, \"th\")(3, \"div\", 0)(4, \"div\", 1)(5, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function FormGridHeaderComponent_ng_template_0_Template_a_click_5_listener() { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.sort.emit(ctx_r2.header); });\n        i0.ɵɵtext(6);\n        i0.ɵɵtemplate(7, FormGridHeaderComponent_ng_template_0_span_7_Template, 1, 4, \"span\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵtext(9, \" Operations \");\n        i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r0.header.label, \"\\u00A0\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r0.header.sort);\n    }\n}\nclass FormGridHeaderComponent extends GridHeaderComponent {\n    load(formio) {\n        this.header = {\n            label: 'Title',\n            key: 'title',\n            sort: SortType.ASC\n        };\n        this.headers = [this.header];\n        return Promise.resolve(this.headers);\n    }\n    get numHeaders() {\n        return 2;\n    }\n}\nFormGridHeaderComponent.ɵfac = /*@__PURE__*/ function () { let ɵFormGridHeaderComponent_BaseFactory; return function FormGridHeaderComponent_Factory(t) { return (ɵFormGridHeaderComponent_BaseFactory || (ɵFormGridHeaderComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FormGridHeaderComponent)))(t || FormGridHeaderComponent); }; }();\nFormGridHeaderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FormGridHeaderComponent, selectors: [[\"form-grid-header\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[1, \"row\"], [1, \"col-sm-8\"], [3, \"click\"], [\"class\", \"glyphicon fa\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"col-sm-4\"], [1, \"glyphicon\", \"fa\", 3, \"ngClass\"]], template: function FormGridHeaderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, FormGridHeaderComponent_ng_template_0_Template, 10, 2, \"ng-template\");\n        }\n    }, directives: [i1.NgIf, i1.NgClass], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGridHeaderComponent, [{\n            type: Component,\n            args: [{ selector: 'form-grid-header', template: \"<ng-template>\\n  <thead>\\n    <tr>\\n      <th>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-8\\\">\\n            <a (click)=\\\"sort.emit(header)\\\">\\n              {{ header.label }}&nbsp;<span [ngClass]=\\\"{'glyphicon-triangle-top fa-caret-up': (header.sort === 'asc'), 'glyphicon-triangle-bottom fa-caret-down': (header.sort === 'desc')}\\\" class=\\\"glyphicon fa\\\" *ngIf=\\\"header.sort\\\"></span>\\n            </a>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            Operations\\n          </div>\\n        </div>\\n      </th>\\n    </tr>\\n  </thead>\\n</ng-template>\\n\" }]\n        }], null, null);\n})();\n\nclass GridService {\n    constructor() { }\n    setRows(rows) {\n        this.rows = rows;\n    }\n    getFormsPerPage() {\n        var _a;\n        return (_a = this.rows) === null || _a === void 0 ? void 0 : _a.length;\n    }\n}\nGridService.ɵfac = function GridService_Factory(t) { return new (t || GridService)(); };\nGridService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: GridService, factory: GridService.ɵfac });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridService, [{\n            type: Injectable\n        }], function () { return []; }, null);\n})();\n\nclass GridBodyComponent {\n    constructor(service) {\n        this.service = service;\n        this.firstItem = 0;\n        this.lastItem = 0;\n        this.skip = 0;\n        this.limit = 0;\n        this.total = 0;\n        this.rowSelect = new EventEmitter();\n        this.rowAction = new EventEmitter();\n        this.loading = true;\n    }\n    load(formio, query) {\n        return formio.loadForm(query);\n    }\n    onRowSelect(event, row) {\n        event.preventDefault();\n        this.rowSelect.emit(row);\n    }\n    onRowAction(event, row, action) {\n        event.preventDefault();\n        this.rowAction.emit({ row, action });\n    }\n    /**\n     * Set the rows for this Grid body.\n     *\n     * @param query\n     * @param items\n     * @return any\n     */\n    setRows(query, items) {\n        this.rows = [];\n        if (typeof items !== 'object') {\n            this.firstItem = 0;\n            this.lastItem = 0;\n            this.total = 0;\n            this.skip = 0;\n            this.loading = false;\n            this.service.setRows(this.rows);\n            return this.rows;\n        }\n        this.firstItem = query.skip + 1;\n        this.lastItem = this.firstItem + items.length - 1;\n        if (this.lastItem === 0) {\n            this.firstItem = 0;\n        }\n        this.total = items.serverCount;\n        this.limit = query.limit;\n        this.skip = Math.floor(items.skip / query.limit) + 1;\n        this.loading = false;\n        each(items, (item) => {\n            this.rows.push(clone(item));\n        });\n        this.service.setRows(this.rows);\n        return this.rows;\n    }\n}\nGridBodyComponent.ɵfac = function GridBodyComponent_Factory(t) { return new (t || GridBodyComponent)(i0.ɵɵdirectiveInject(GridService)); };\nGridBodyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: GridBodyComponent, selectors: [[\"ng-component\"]], viewQuery: function GridBodyComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(TemplateRef, 7);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        }\n    }, inputs: { header: \"header\", actionAllowed: \"actionAllowed\" }, outputs: { rowSelect: \"rowSelect\", rowAction: \"rowAction\" }, decls: 0, vars: 0, template: function GridBodyComponent_Template(rf, ctx) { }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridBodyComponent, [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], function () { return [{ type: GridService }]; }, { header: [{\n                type: Input\n            }], actionAllowed: [{\n                type: Input\n            }], rowSelect: [{\n                type: Output\n            }], rowAction: [{\n                type: Output\n            }], template: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }] });\n})();\n\nclass TimeSince {\n    transform(date) {\n        const elapsed = (new Date().getTime() - new Date(date).getTime()) / 1000;\n        let interval;\n        if (interval >= 1) {\n            return interval + ' year' + (interval > 1 ? 's' : '');\n        }\n        interval = Math.floor(elapsed / 2592000);\n        if (interval >= 1) {\n            return interval + ' month' + (interval > 1 ? 's' : '');\n        }\n        interval = Math.floor(elapsed / 86400);\n        if (interval >= 1) {\n            return interval + ' day' + (interval > 1 ? 's' : '');\n        }\n        interval = Math.floor(elapsed / 3600);\n        if (interval >= 1) {\n            return interval + ' hour' + (interval > 1 ? 's' : '');\n        }\n        interval = Math.floor(elapsed / 60);\n        if (interval >= 1) {\n            return interval + ' minute' + (interval > 1 ? 's' : '');\n        }\n        return Math.floor(elapsed) + ' second' + (elapsed > 1 ? 's' : '');\n    }\n}\nTimeSince.ɵfac = function TimeSince_Factory(t) { return new (t || TimeSince)(); };\nTimeSince.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"timeSince\", type: TimeSince, pure: true });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeSince, [{\n            type: Pipe,\n            args: [{\n                    name: 'timeSince'\n                }]\n        }], null, null);\n})();\n\nfunction FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_11_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r11 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_11_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r11); const form_r3 = i0.ɵɵnextContext().$implicit; const ctx_r9 = i0.ɵɵnextContext(3); return ctx_r9.onRowAction($event, form_r3, \"view\"); });\n        i0.ɵɵelement(1, \"span\", 11);\n        i0.ɵɵtext(2, \" Enter Data\");\n        i0.ɵɵelementEnd();\n    }\n}\nfunction FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_13_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r14 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_13_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r14); const form_r3 = i0.ɵɵnextContext().$implicit; const ctx_r12 = i0.ɵɵnextContext(3); return ctx_r12.onRowAction($event, form_r3, \"submission\"); });\n        i0.ɵɵelement(1, \"span\", 13);\n        i0.ɵɵtext(2, \" View Data\");\n        i0.ɵɵelementEnd();\n    }\n}\nfunction FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_15_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r17 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_15_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r17); const form_r3 = i0.ɵɵnextContext().$implicit; const ctx_r15 = i0.ɵɵnextContext(3); return ctx_r15.onRowAction($event, form_r3, \"edit\"); });\n        i0.ɵɵelement(1, \"span\", 14);\n        i0.ɵɵtext(2, \" Edit Form\");\n        i0.ɵɵelementEnd();\n    }\n}\nfunction FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_17_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r20 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_17_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r20); const form_r3 = i0.ɵɵnextContext().$implicit; const ctx_r18 = i0.ɵɵnextContext(3); return ctx_r18.onRowAction($event, form_r3, \"permissions\"); });\n        i0.ɵɵelement(1, \"span\", 15);\n        i0.ɵɵtext(2, \" Permissions\");\n        i0.ɵɵelementEnd();\n    }\n}\nfunction FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_19_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r23 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_19_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r23); const form_r3 = i0.ɵɵnextContext().$implicit; const ctx_r21 = i0.ɵɵnextContext(3); return ctx_r21.onRowAction($event, form_r3, \"delete\"); });\n        i0.ɵɵelement(1, \"span\", 17);\n        i0.ɵɵelementEnd();\n    }\n}\nfunction FormGridBodyComponent_ng_template_0_tbody_0_tr_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r25 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"div\", 2)(3, \"div\", 3)(4, \"a\", 4);\n        i0.ɵɵlistener(\"click\", function FormGridBodyComponent_ng_template_0_tbody_0_tr_1_Template_a_click_4_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r25); const form_r3 = restoredCtx.$implicit; const ctx_r24 = i0.ɵɵnextContext(3); return ctx_r24.onRowSelect($event, form_r3); });\n        i0.ɵɵelementStart(5, \"h5\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"timeSince\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 6);\n        i0.ɵɵtemplate(11, FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_11_Template, 3, 0, \"button\", 7);\n        i0.ɵɵtext(12, \"\\u00A0 \");\n        i0.ɵɵtemplate(13, FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_13_Template, 3, 0, \"button\", 8);\n        i0.ɵɵtext(14, \"\\u00A0 \");\n        i0.ɵɵtemplate(15, FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_15_Template, 3, 0, \"button\", 8);\n        i0.ɵɵtext(16, \"\\u00A0 \");\n        i0.ɵɵtemplate(17, FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_17_Template, 3, 0, \"button\", 8);\n        i0.ɵɵtext(18, \"\\u00A0 \");\n        i0.ɵɵtemplate(19, FormGridBodyComponent_ng_template_0_tbody_0_tr_1_button_19_Template, 2, 0, \"button\", 9);\n        i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n        const form_r3 = ctx.$implicit;\n        const ctx_r2 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate1(\"routerLink\", \"\", form_r3._id, \"/view\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(form_r3.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" Updated \", i0.ɵɵpipeBind1(9, 8, form_r3.modified), \" ago \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.actionAllowed(\"formView\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.actionAllowed(\"formSubmission\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.actionAllowed(\"formEdit\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.actionAllowed(\"formPermission\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.actionAllowed(\"formDelete\"));\n    }\n}\nfunction FormGridBodyComponent_ng_template_0_tbody_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"tbody\");\n        i0.ɵɵtemplate(1, FormGridBodyComponent_ng_template_0_tbody_0_tr_1_Template, 20, 10, \"tr\", 1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext(2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r1.rows);\n    }\n}\nfunction FormGridBodyComponent_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵtemplate(0, FormGridBodyComponent_ng_template_0_tbody_0_Template, 2, 1, \"tbody\", 0);\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"ngIf\", ctx_r0.rows);\n    }\n}\nclass FormGridBodyComponent extends GridBodyComponent {\n    load(formio, query) {\n        query = query || {};\n        return formio.loadForms({ params: query }).then((forms) => this.setRows(query, forms));\n    }\n}\nFormGridBodyComponent.ɵfac = /*@__PURE__*/ function () { let ɵFormGridBodyComponent_BaseFactory; return function FormGridBodyComponent_Factory(t) { return (ɵFormGridBodyComponent_BaseFactory || (ɵFormGridBodyComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FormGridBodyComponent)))(t || FormGridBodyComponent); }; }();\nFormGridBodyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FormGridBodyComponent, selectors: [[\"form-grid-body\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col-sm-8\"], [3, \"routerLink\", \"click\"], [1, \"form-updated\", \"small\", \"text-muted\"], [1, \"col-sm-4\"], [\"class\", \"btn btn-outline-secondary btn-sm form-btn form-btn-use\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-outline-secondary btn-sm form-btn\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-danger btn-sm form-btn form-btn-delete\", \"title\", \"Delete form\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-outline-secondary\", \"btn-sm\", \"form-btn\", \"form-btn-use\", 3, \"click\"], [1, \"fa\", \"fa-pencil\"], [1, \"btn\", \"btn-outline-secondary\", \"btn-sm\", \"form-btn\", 3, \"click\"], [1, \"fa\", \"fa-list-alt\"], [1, \"fa\", \"fa-edit\"], [1, \"fa\", \"fa-lock\"], [\"title\", \"Delete form\", 1, \"btn\", \"btn-danger\", \"btn-sm\", \"form-btn\", \"form-btn-delete\", 3, \"click\"], [1, \"fa\", \"fa-trash\"]], template: function FormGridBodyComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, FormGridBodyComponent_ng_template_0_Template, 1, 1, \"ng-template\");\n        }\n    }, directives: [i1.NgIf, i1.NgForOf, i2.RouterLinkWithHref], pipes: [TimeSince], styles: [\".form-btn[_ngcontent-%COMP%]{font-size:.75rem;margin:2px 0}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGridBodyComponent, [{\n            type: Component,\n            args: [{ selector: 'form-grid-body', template: \"<ng-template>\\n  <tbody *ngIf=\\\"rows\\\">\\n    <tr *ngFor=\\\"let form of rows\\\">\\n      <td>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-8\\\">\\n            <a routerLink=\\\"{{form._id}}/view\\\" (click)=\\\"onRowSelect($event, form)\\\"><h5>{{ form.title }}</h5></a>\\n            <div class=\\\"form-updated small text-muted\\\">\\n              Updated {{ form.modified | timeSince }} ago\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <button *ngIf=\\\"actionAllowed('formView')\\\" class=\\\"btn btn-outline-secondary btn-sm form-btn form-btn-use\\\" (click)=\\\"onRowAction($event, form, 'view')\\\"><span class=\\\"fa fa-pencil\\\"></span> Enter Data</button>&nbsp;\\n            <button *ngIf=\\\"actionAllowed('formSubmission')\\\" class=\\\"btn btn-outline-secondary btn-sm form-btn\\\" (click)=\\\"onRowAction($event, form, 'submission')\\\"><span class=\\\"fa fa-list-alt\\\"></span> View Data</button>&nbsp;\\n            <button *ngIf=\\\"actionAllowed('formEdit')\\\" class=\\\"btn btn-outline-secondary btn-sm form-btn\\\" (click)=\\\"onRowAction($event, form, 'edit')\\\"><span class=\\\"fa fa-edit\\\"></span> Edit Form</button>&nbsp;\\n            <button *ngIf=\\\"actionAllowed('formPermission')\\\" class=\\\"btn btn-outline-secondary btn-sm form-btn\\\" (click)=\\\"onRowAction($event, form, 'permissions')\\\"><span class=\\\"fa fa-lock\\\"></span> Permissions</button>&nbsp;\\n            <button *ngIf=\\\"actionAllowed('formDelete')\\\" class=\\\"btn btn-danger btn-sm form-btn form-btn-delete\\\" (click)=\\\"onRowAction($event, form, 'delete')\\\" title=\\\"Delete form\\\"><span class=\\\"fa fa-trash\\\"></span></button>\\n          </div>\\n        </div>\\n      </td>\\n    </tr>\\n  </tbody>\\n</ng-template>\\n\", styles: [\".form-btn{font-size:.75rem;margin:2px 0}\\n\"] }]\n        }], null, null);\n})();\n\nclass GridFooterComponent {\n    constructor() {\n        this.footerPositions = GridFooterPositions;\n        this.pageChanged = new EventEmitter();\n        this.createItem = new EventEmitter();\n    }\n}\nGridFooterComponent.ɵfac = function GridFooterComponent_Factory(t) { return new (t || GridFooterComponent)(); };\nGridFooterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: GridFooterComponent, selectors: [[\"ng-component\"]], viewQuery: function GridFooterComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(TemplateRef, 7);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        }\n    }, inputs: { header: \"header\", body: \"body\", createText: \"createText\", size: \"size\", actionAllowed: \"actionAllowed\" }, outputs: { pageChanged: \"pageChanged\", createItem: \"createItem\" }, decls: 0, vars: 0, template: function GridFooterComponent_Template(rf, ctx) { }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridFooterComponent, [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], function () { return []; }, { header: [{\n                type: Input\n            }], body: [{\n                type: Input\n            }], createText: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], actionAllowed: [{\n                type: Input\n            }], pageChanged: [{\n                type: Output\n            }], createItem: [{\n                type: Output\n            }], template: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }] });\n})();\n\nconst _c0$2 = function (a0) { return { label: a0 }; };\nfunction FormGridFooterComponent_ng_template_0_thead_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"thead\", 3);\n        i0.ɵɵelementContainer(1, 4);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const label_r5 = i0.ɵɵnextContext().label;\n        i0.ɵɵnextContext();\n        const _r2 = i0.ɵɵreference(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0$2, label_r5));\n    }\n}\nfunction FormGridFooterComponent_ng_template_0_tfoot_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"tfoot\", 3);\n        i0.ɵɵelementContainer(1, 4);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const label_r5 = i0.ɵɵnextContext().label;\n        i0.ɵɵnextContext();\n        const _r2 = i0.ɵɵreference(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0$2, label_r5));\n    }\n}\nfunction FormGridFooterComponent_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵtemplate(0, FormGridFooterComponent_ng_template_0_thead_0_Template, 2, 4, \"thead\", 2);\n        i0.ɵɵtemplate(1, FormGridFooterComponent_ng_template_0_tfoot_1_Template, 2, 4, \"tfoot\", 2);\n    }\n    if (rf & 2) {\n        const position_r4 = ctx.position;\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"ngIf\", position_r4 === ctx_r1.footerPositions.top);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", position_r4 === ctx_r1.footerPositions.bottom);\n    }\n}\nfunction FormGridFooterComponent_ng_template_2_td_1_button_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r14 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function FormGridFooterComponent_ng_template_2_td_1_button_1_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(3); return ctx_r13.createItem.emit(\"form\"); });\n        i0.ɵɵelement(1, \"em\", 13);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r12 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r12.createText, \"\");\n    }\n}\nfunction FormGridFooterComponent_ng_template_2_td_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r16 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\", 6);\n        i0.ɵɵtemplate(1, FormGridFooterComponent_ng_template_2_td_1_button_1_Template, 3, 1, \"button\", 7);\n        i0.ɵɵelementStart(2, \"span\", 8)(3, \"span\", 9);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"span\", 10)(7, \"pagination\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function FormGridFooterComponent_ng_template_2_td_1_Template_pagination_ngModelChange_7_listener($event) { i0.ɵɵrestoreView(_r16); const ctx_r15 = i0.ɵɵnextContext(2); return ctx_r15.body.skip = $event; })(\"pageChanged\", function FormGridFooterComponent_ng_template_2_td_1_Template_pagination_pageChanged_7_listener($event) { i0.ɵɵrestoreView(_r16); const ctx_r17 = i0.ɵɵnextContext(2); return ctx_r17.pageChanged.emit($event); });\n        i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n        const label_r10 = i0.ɵɵnextContext().label;\n        const ctx_r11 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"colSpan\", ctx_r11.header.numHeaders);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r11.actionAllowed(\"formCreate\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", ctx_r11.body.firstItem, \" - \", ctx_r11.body.lastItem, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" / \", ctx_r11.body.total, \" total\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", label_r10);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"totalItems\", ctx_r11.body.total)(\"itemsPerPage\", ctx_r11.body.limit)(\"ngModel\", ctx_r11.body.skip)(\"maxSize\", ctx_r11.size);\n    }\n}\nfunction FormGridFooterComponent_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"tr\");\n        i0.ɵɵtemplate(1, FormGridFooterComponent_ng_template_2_td_1_Template, 8, 10, \"td\", 5);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r3.header);\n    }\n}\nclass FormGridFooterComponent extends GridFooterComponent {\n    constructor() {\n        super();\n    }\n    ngOnInit() {\n        if (!this.createText) {\n            this.createText = 'Create Form';\n        }\n        if (!this.size) {\n            this.size = 7;\n        }\n    }\n}\nFormGridFooterComponent.ɵfac = function FormGridFooterComponent_Factory(t) { return new (t || FormGridFooterComponent)(); };\nFormGridFooterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FormGridFooterComponent, selectors: [[\"ng-component\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 4, vars: 0, consts: [[\"footer\", \"\"], [\"defaultFooterTemplate\", \"\"], [\"class\", \"formio-grid-footer\", 4, \"ngIf\"], [1, \"formio-grid-footer\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"colSpan\", 4, \"ngIf\"], [3, \"colSpan\"], [\"class\", \"btn btn-primary form-btn-use pull-left float-left\", 3, \"click\", 4, \"ngIf\"], [1, \"pull-right\", \"float-right\", \"item-counter\"], [1, \"page-num\"], [\"role\", \"navigation\"], [1, \"justify-content-center\", \"pagination-sm\", 3, \"totalItems\", \"itemsPerPage\", \"ngModel\", \"maxSize\", \"ngModelChange\", \"pageChanged\"], [1, \"btn\", \"btn-primary\", \"form-btn-use\", \"pull-left\", \"float-left\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-plus\", \"fa\", \"fa-plus\"]], template: function FormGridFooterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, FormGridFooterComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵtemplate(2, FormGridFooterComponent_ng_template_2_Template, 2, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        }\n    }, directives: [i1.NgIf, i1.NgTemplateOutlet, i2$1.PaginationComponent, i3.NgControlStatus, i3.NgModel], styles: [\"tfoot.formio-grid-footer td{padding:.3rem}tfoot.formio-grid-footer .page-num{font-size:1.4em}tfoot.formio-grid-footer ul.pagination{margin-top:5px;margin-bottom:0}\\n\"], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGridFooterComponent, [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, template: \"<ng-template #footer let-position=\\\"position\\\" let-label=\\\"label\\\">\\n  <thead class=\\\"formio-grid-footer\\\" *ngIf=\\\"position === footerPositions.top\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"defaultFooterTemplate\\\" [ngTemplateOutletContext]=\\\"{ label: label }\\\"></ng-container>\\n  </thead>\\n  <tfoot class=\\\"formio-grid-footer\\\" *ngIf=\\\"position === footerPositions.bottom\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"defaultFooterTemplate\\\" [ngTemplateOutletContext]=\\\"{ label: label }\\\"></ng-container>\\n  </tfoot>\\n</ng-template>\\n\\n<ng-template let-label=\\\"label\\\" #defaultFooterTemplate>\\n  <tr>\\n    <td *ngIf=\\\"header\\\" [colSpan]=\\\"header.numHeaders\\\">\\n      <button *ngIf=\\\"actionAllowed('formCreate')\\\" class=\\\"btn btn-primary form-btn-use pull-left float-left\\\" (click)=\\\"createItem.emit('form')\\\"><em class=\\\"glyphicon glyphicon-plus fa fa-plus\\\"></em> {{ createText }}</button>\\n      <span class=\\\"pull-right float-right item-counter\\\"><span class=\\\"page-num\\\">{{ body.firstItem }} - {{ body.lastItem }}</span> / {{ body.total }} total</span>\\n      <span [attr.aria-label]=\\\"label\\\" role=\\\"navigation\\\">\\n        <pagination [totalItems]=\\\"body.total\\\" [itemsPerPage]=\\\"body.limit\\\" [(ngModel)]=\\\"body.skip\\\" (pageChanged)=\\\"pageChanged.emit($event)\\\" [maxSize]=\\\"size\\\" class=\\\"justify-content-center pagination-sm\\\">\\n        </pagination>\\n      </span>\\n    </td>\\n  </tr>\\n</ng-template>\\n\", styles: [\"tfoot.formio-grid-footer td{padding:.3rem}tfoot.formio-grid-footer .page-num{font-size:1.4em}tfoot.formio-grid-footer ul.pagination{margin-top:5px;margin-bottom:0}\\n\"] }]\n        }], function () { return []; }, null);\n})();\n\nvar FormComponents = {\n    header: FormGridHeaderComponent,\n    body: FormGridBodyComponent,\n    footer: FormGridFooterComponent\n};\n\nconst _c0$1 = function (a0, a1) { return { \"glyphicon-triangle-top\": a0, \"glyphicon-triangle-bottom\": a1 }; };\nfunction SubmissionGridHeaderComponent_ng_template_0_th_2_span_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"span\", 3);\n    }\n    if (rf & 2) {\n        const header_r2 = i0.ɵɵnextContext().$implicit;\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(1, _c0$1, header_r2.sort === \"asc\", header_r2.sort === \"desc\"));\n    }\n}\nfunction SubmissionGridHeaderComponent_ng_template_0_th_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"th\")(1, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function SubmissionGridHeaderComponent_ng_template_0_th_2_Template_a_click_1_listener() { const restoredCtx = i0.ɵɵrestoreView(_r6); const header_r2 = restoredCtx.$implicit; const ctx_r5 = i0.ɵɵnextContext(2); return ctx_r5.sort.emit(header_r2); });\n        i0.ɵɵtext(2);\n        i0.ɵɵtemplate(3, SubmissionGridHeaderComponent_ng_template_0_th_2_span_3_Template, 1, 4, \"span\", 2);\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const header_r2 = ctx.$implicit;\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", header_r2.label, \"\\u00A0\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", header_r2.sort);\n    }\n}\nfunction SubmissionGridHeaderComponent_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"thead\")(1, \"tr\");\n        i0.ɵɵtemplate(2, SubmissionGridHeaderComponent_ng_template_0_th_2_Template, 4, 2, \"th\", 0);\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r0.headers);\n    }\n}\nclass SubmissionGridHeaderComponent extends GridHeaderComponent {\n    load(formio, query, columns) {\n        query = query || {};\n        return formio.loadForm({ params: query }).then((form) => {\n            this.headers = [];\n            this.formComponents = new Map();\n            this.setComponents(form.components);\n            columns ? columns.forEach(column => {\n                this.setHeader(this.getHeaderForColumn(column, this.formComponents.get(column.path)));\n            }) : this.setComponentsHeaders(this.formComponents);\n            return this.headers;\n        });\n    }\n    setHeader(header) {\n        this.headers.push(header);\n    }\n    getHeaderForColumn(column, component, sort) {\n        return {\n            label: column.label,\n            key: column.path,\n            sort: sort,\n            component: component ? Components.create(component, null, null, true) : undefined,\n            renderCell: column ? column.renderCell : undefined\n        };\n    }\n    getHeaderForComponent(component, path, sort) {\n        return {\n            label: component.label,\n            key: path,\n            sort: sort,\n            component: component ? Components.create(component, null, null, true) : undefined,\n        };\n    }\n    // Set headers from components in case if columns are not provided\n    setComponentsHeaders(components, sort) {\n        components.forEach((component, path) => {\n            if (component.input &&\n                (!component.hasOwnProperty('tableView') || component.tableView)) {\n                this.setHeader(this.getHeaderForComponent(component, path, sort));\n            }\n        });\n    }\n    // Map components\n    setComponents(components) {\n        Utils.eachComponent(components, (component, newPath) => {\n            this.formComponents.set(`data.${newPath}`, component);\n        });\n    }\n}\nSubmissionGridHeaderComponent.ɵfac = /*@__PURE__*/ function () { let ɵSubmissionGridHeaderComponent_BaseFactory; return function SubmissionGridHeaderComponent_Factory(t) { return (ɵSubmissionGridHeaderComponent_BaseFactory || (ɵSubmissionGridHeaderComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SubmissionGridHeaderComponent)))(t || SubmissionGridHeaderComponent); }; }();\nSubmissionGridHeaderComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SubmissionGridHeaderComponent, selectors: [[\"ng-component\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"class\", \"glyphicon\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"glyphicon\", 3, \"ngClass\"]], template: function SubmissionGridHeaderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, SubmissionGridHeaderComponent_ng_template_0_Template, 3, 1, \"ng-template\");\n        }\n    }, directives: [i1.NgForOf, i1.NgIf, i1.NgClass], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SubmissionGridHeaderComponent, [{\n            type: Component,\n            args: [{ template: \"<ng-template>\\n  <thead>\\n    <tr>\\n      <th *ngFor=\\\"let header of headers\\\">\\n        <a (click)=\\\"sort.emit(header)\\\">\\n          {{ header.label }}&nbsp;<span [ngClass]=\\\"{'glyphicon-triangle-top': (header.sort === 'asc'), 'glyphicon-triangle-bottom': (header.sort === 'desc')}\\\" class=\\\"glyphicon\\\" *ngIf=\\\"header.sort\\\"></span>\\n        </a>\\n      </th>\\n    </tr>\\n  </thead>\\n</ng-template>\\n\" }]\n        }], null, null);\n})();\n\nfunction SubmissionGridBodyComponent_ng_template_0_tr_1_td_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"td\", 3);\n    }\n    if (rf & 2) {\n        const rowHeader_r4 = ctx.$implicit;\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        const ctx_r3 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"innerHTML\", ctx_r3.view(row_r2, rowHeader_r4), i0.ɵɵsanitizeHtml);\n    }\n}\nfunction SubmissionGridBodyComponent_ng_template_0_tr_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"tr\", 1);\n        i0.ɵɵlistener(\"click\", function SubmissionGridBodyComponent_ng_template_0_tr_1_Template_tr_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r7); const row_r2 = restoredCtx.$implicit; const ctx_r6 = i0.ɵɵnextContext(2); return ctx_r6.onRowSelect($event, row_r2); });\n        i0.ɵɵtemplate(1, SubmissionGridBodyComponent_ng_template_0_tr_1_td_1_Template, 1, 1, \"td\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext(2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r1.header.headers);\n    }\n}\nfunction SubmissionGridBodyComponent_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"tbody\");\n        i0.ɵɵtemplate(1, SubmissionGridBodyComponent_ng_template_0_tr_1_Template, 2, 1, \"tr\", 0);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r0.rows);\n    }\n}\nclass SubmissionGridBodyComponent extends GridBodyComponent {\n    load(formio, query) {\n        query = query || {};\n        return formio.loadSubmissions({ params: query })\n            .then((submissions) => this.setRows(query, submissions));\n    }\n    /**\n     * Render the cell data.\n     *\n     * @param submission\n     * @param header\n     * @return any\n     */\n    view(submission, header) {\n        const cellValue = get(submission, header.key);\n        if (header.renderCell) {\n            return header.renderCell(cellValue, header.component);\n        }\n        else {\n            if (header.component) {\n                if (header.component.getView) {\n                    return header.component.getView(cellValue);\n                }\n                return header.component.asString(cellValue);\n            }\n            else {\n                return cellValue.toString();\n            }\n        }\n    }\n}\nSubmissionGridBodyComponent.ɵfac = /*@__PURE__*/ function () { let ɵSubmissionGridBodyComponent_BaseFactory; return function SubmissionGridBodyComponent_Factory(t) { return (ɵSubmissionGridBodyComponent_BaseFactory || (ɵSubmissionGridBodyComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SubmissionGridBodyComponent)))(t || SubmissionGridBodyComponent); }; }();\nSubmissionGridBodyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SubmissionGridBodyComponent, selectors: [[\"ng-component\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"innerHTML\", 4, \"ngFor\", \"ngForOf\"], [3, \"innerHTML\"]], template: function SubmissionGridBodyComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, SubmissionGridBodyComponent_ng_template_0_Template, 2, 1, \"ng-template\");\n        }\n    }, directives: [i1.NgForOf], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SubmissionGridBodyComponent, [{\n            type: Component,\n            args: [{ template: \"<ng-template>\\n  <tbody>\\n    <tr *ngFor=\\\"let row of rows\\\" (click)=\\\"onRowSelect($event, row)\\\">\\n      <td *ngFor=\\\"let rowHeader of header.headers\\\" [innerHTML]=\\\"view(row, rowHeader)\\\"></td>\\n    </tr>\\n  </tbody>\\n</ng-template>\\n\" }]\n        }], null, null);\n})();\n\nfunction SubmissionGridFooterComponent_ng_template_0_thead_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"thead\", 3);\n        i0.ɵɵelementContainer(1, 4);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        i0.ɵɵnextContext(2);\n        const _r2 = i0.ɵɵreference(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r2);\n    }\n}\nfunction SubmissionGridFooterComponent_ng_template_0_tfoot_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"tfoot\", 3);\n        i0.ɵɵelementContainer(1, 4);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        i0.ɵɵnextContext(2);\n        const _r2 = i0.ɵɵreference(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r2);\n    }\n}\nfunction SubmissionGridFooterComponent_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵtemplate(0, SubmissionGridFooterComponent_ng_template_0_thead_0_Template, 2, 1, \"thead\", 2);\n        i0.ɵɵtemplate(1, SubmissionGridFooterComponent_ng_template_0_tfoot_1_Template, 2, 1, \"tfoot\", 2);\n    }\n    if (rf & 2) {\n        const position_r4 = ctx.position;\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"ngIf\", position_r4 === ctx_r1.footerPositions.top);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", position_r4 === ctx_r1.footerPositions.bottom);\n    }\n}\nfunction SubmissionGridFooterComponent_ng_template_2_td_1_button_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function SubmissionGridFooterComponent_ng_template_2_td_1_button_1_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(3); return ctx_r9.createItem.emit(\"form\"); });\n        i0.ɵɵelement(1, \"em\", 12);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r8 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r8.createText, \"\");\n    }\n}\nfunction SubmissionGridFooterComponent_ng_template_2_td_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r12 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\", 6);\n        i0.ɵɵtemplate(1, SubmissionGridFooterComponent_ng_template_2_td_1_button_1_Template, 3, 1, \"button\", 7);\n        i0.ɵɵelementStart(2, \"span\", 8)(3, \"span\", 9);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"pagination\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function SubmissionGridFooterComponent_ng_template_2_td_1_Template_pagination_ngModelChange_6_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(2); return ctx_r11.body.skip = $event; })(\"pageChanged\", function SubmissionGridFooterComponent_ng_template_2_td_1_Template_pagination_pageChanged_6_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r13 = i0.ɵɵnextContext(2); return ctx_r13.pageChanged.emit($event); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const ctx_r7 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"colSpan\", ctx_r7.header.numHeaders);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r7.actionAllowed(\"submissionCreate\") && ctx_r7.createText);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", ctx_r7.body.firstItem, \" - \", ctx_r7.body.lastItem, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" / \", ctx_r7.body.total, \" total\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"totalItems\", ctx_r7.body.total)(\"itemsPerPage\", ctx_r7.body.limit)(\"ngModel\", ctx_r7.body.skip)(\"maxSize\", ctx_r7.size);\n    }\n}\nfunction SubmissionGridFooterComponent_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"tr\");\n        i0.ɵɵtemplate(1, SubmissionGridFooterComponent_ng_template_2_td_1_Template, 7, 9, \"td\", 5);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r3.header);\n    }\n}\nclass SubmissionGridFooterComponent extends GridFooterComponent {\n    constructor() {\n        super();\n    }\n    ngOnInit() {\n        if (!this.size) {\n            this.size = 7;\n        }\n    }\n}\nSubmissionGridFooterComponent.ɵfac = function SubmissionGridFooterComponent_Factory(t) { return new (t || SubmissionGridFooterComponent)(); };\nSubmissionGridFooterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SubmissionGridFooterComponent, selectors: [[\"ng-component\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 4, vars: 0, consts: [[\"footer\", \"\"], [\"defaultFooterTemplate\", \"\"], [\"class\", \"formio-grid-footer\", 4, \"ngIf\"], [1, \"formio-grid-footer\"], [3, \"ngTemplateOutlet\"], [3, \"colSpan\", 4, \"ngIf\"], [3, \"colSpan\"], [\"class\", \"btn btn-primary pull-left float-left\", 3, \"click\", 4, \"ngIf\"], [1, \"pull-right\", \"float-right\", \"item-counter\"], [1, \"page-num\"], [1, \"justify-content-center\", \"pagination-sm\", 3, \"totalItems\", \"itemsPerPage\", \"ngModel\", \"maxSize\", \"ngModelChange\", \"pageChanged\"], [1, \"btn\", \"btn-primary\", \"pull-left\", \"float-left\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-plus\", \"fa\", \"fa-plus\"]], template: function SubmissionGridFooterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, SubmissionGridFooterComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵtemplate(2, SubmissionGridFooterComponent_ng_template_2_Template, 2, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        }\n    }, directives: [i1.NgIf, i1.NgTemplateOutlet, i2$1.PaginationComponent, i3.NgControlStatus, i3.NgModel], styles: [\"tfoot.formio-grid-footer td{padding:.3rem}tfoot.formio-grid-footer .page-num{font-size:1.4em}tfoot.formio-grid-footer ul.pagination{margin-top:5px;margin-bottom:0}\\n\"], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SubmissionGridFooterComponent, [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, template: \"<ng-template #footer let-position=\\\"position\\\">\\n  <thead class=\\\"formio-grid-footer\\\" *ngIf=\\\"position === footerPositions.top\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"defaultFooterTemplate\\\"></ng-container>\\n  </thead>\\n  <tfoot class=\\\"formio-grid-footer\\\" *ngIf=\\\"position === footerPositions.bottom\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"defaultFooterTemplate\\\"></ng-container>\\n  </tfoot>\\n</ng-template>\\n\\n<ng-template #defaultFooterTemplate>\\n  <tr>\\n    <td *ngIf=\\\"header\\\" [colSpan]=\\\"header.numHeaders\\\">\\n      <button *ngIf=\\\"actionAllowed('submissionCreate') && createText\\\" class=\\\"btn btn-primary pull-left float-left\\\" (click)=\\\"createItem.emit('form')\\\"><em class=\\\"glyphicon glyphicon-plus fa fa-plus\\\"></em> {{ createText }}</button>\\n      <span class=\\\"pull-right float-right item-counter\\\"><span class=\\\"page-num\\\">{{ body.firstItem }} - {{ body.lastItem }}</span> / {{ body.total }} total</span>\\n      <pagination [totalItems]=\\\"body.total\\\" [itemsPerPage]=\\\"body.limit\\\" [(ngModel)]=\\\"body.skip\\\" (pageChanged)=\\\"pageChanged.emit($event)\\\" [maxSize]=\\\"size\\\" class=\\\"justify-content-center pagination-sm\\\"></pagination>\\n    </td>\\n  </tr>\\n</ng-template>\\n\", styles: [\"tfoot.formio-grid-footer td{padding:.3rem}tfoot.formio-grid-footer .page-num{font-size:1.4em}tfoot.formio-grid-footer ul.pagination{margin-top:5px;margin-bottom:0}\\n\"] }]\n        }], function () { return []; }, null);\n})();\n\nvar SubmissionComponents = {\n    header: SubmissionGridHeaderComponent,\n    body: SubmissionGridBodyComponent,\n    footer: SubmissionGridFooterComponent\n};\n\nconst _c0 = [\"headerTemplate\"];\nconst _c1 = [\"bodyTemplate\"];\nconst _c2 = [\"footerTemplate\"];\nfunction FormioGridComponent_ng_template_0_Template(rf, ctx) { }\nfunction FormioGridComponent_ng_template_2_Template(rf, ctx) { }\nfunction FormioGridComponent_ng_template_4_Template(rf, ctx) { }\nconst _c3 = function (a0, a1) { return { position: a0, label: a1 }; };\nfunction FormioGridComponent_ng_container_9_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementContainer(0, 9);\n    }\n    if (rf & 2) {\n        const ctx_r6 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.footer.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c3, ctx_r6.footerPositions.top, ctx_r6.label));\n    }\n}\nfunction FormioGridComponent_ng_container_10_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementContainer(0, 10);\n    }\n    if (rf & 2) {\n        const ctx_r7 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.header.template);\n    }\n}\nfunction FormioGridComponent_ng_container_12_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementContainer(0, 10);\n    }\n    if (rf & 2) {\n        const ctx_r8 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r8.body.template);\n    }\n}\nfunction FormioGridComponent_ng_container_13_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementContainer(0, 9);\n    }\n    if (rf & 2) {\n        const ctx_r9 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.footer.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c3, ctx_r9.footerPositions.bottom, ctx_r9.label));\n    }\n}\nconst _c4 = function (a0, a1) { return [a0, a1]; };\nclass FormioGridComponent {\n    constructor(alerts, resolver, ref) {\n        this.alerts = alerts;\n        this.resolver = resolver;\n        this.ref = ref;\n        this.footerPosition = GridFooterPositions.bottom;\n        this.page = 0;\n        this.isLoading = false;\n        this.initialized = false;\n        this.footerPositions = GridFooterPositions;\n        this.select = this.rowSelect = new EventEmitter();\n        this.rowAction = new EventEmitter();\n        this.createItem = new EventEmitter();\n        this.error = new EventEmitter();\n        this.isLoading = true;\n    }\n    createComponent(property, component) {\n        const factory = this.resolver.resolveComponentFactory(component);\n        const componentRef = property.createComponent(factory);\n        return componentRef.instance;\n    }\n    loadGrid(src) {\n        // If no source is provided, then skip.\n        if (!src && !this.formio) {\n            return;\n        }\n        // Do not double load.\n        if (this.formio && this.src && (src === this.src)) {\n            return;\n        }\n        if (src) {\n            this.src = src;\n            this.formio = new FormioPromiseService(this.src, { formOnly: true });\n        }\n        // Load the header.\n        this.header.load(this.formio, {}, this.columns)\n            .then(() => this.setPage(0))\n            .catch(error => this.onError(error));\n    }\n    ngOnInit() {\n        // Create our components.\n        const comps = this.components || ((this.gridType === 'form') ? FormComponents : SubmissionComponents);\n        this.header = this.createComponent(this.headerElement, comps.header);\n        this.header.actionAllowed = this.actionAllowed.bind(this);\n        this.header.sort.subscribe(header => this.sortColumn(header));\n        this.body = this.createComponent(this.bodyElement, comps.body);\n        this.body.header = this.header;\n        this.body.actionAllowed = this.actionAllowed.bind(this);\n        this.body.rowSelect.subscribe(row => this.rowSelect.emit(row));\n        this.body.rowAction.subscribe(action => this.rowAction.emit(action));\n        this.footer = this.createComponent(this.footerElement, comps.footer);\n        this.footer.header = this.header;\n        this.footer.body = this.body;\n        this.footer.actionAllowed = this.actionAllowed.bind(this);\n        this.footer.createText = this.createText;\n        this.footer.size = this.size;\n        this.footer.pageChanged.subscribe(page => this.pageChanged(page));\n        this.footer.createItem.subscribe(item => this.createItem.emit(item));\n    }\n    ngOnChanges(changes) {\n        if (this.initialized) {\n            if ((changes.src && changes.src.currentValue) ||\n                (changes.formio && changes.formio.currentValue)) {\n                this.loadGrid(changes.src.currentValue);\n            }\n            if (changes.items && changes.items.currentValue) {\n                this.refreshGrid();\n            }\n        }\n        if (this.footer &&\n            (changes.createText && changes.createText.currentValue)) {\n            this.footer.createText = changes.createText.currentValue;\n        }\n    }\n    ngAfterViewInit() {\n        this.alerts.setAlerts([]);\n        this.query = this.query || {};\n        if (this.refresh) {\n            this.refresh.subscribe((query) => this.refreshGrid(query));\n        }\n        this.loadGrid(this.src);\n        this.initialized = true;\n        this.ref.detectChanges();\n    }\n    actionAllowed(action) {\n        if (this.isActionAllowed) {\n            return this.isActionAllowed(action);\n        }\n        else {\n            return true;\n        }\n    }\n    onError(error) {\n        this.isLoading = false;\n        this.error.emit(error);\n        if (typeof error === 'string' || error.message) {\n            this.alerts.setAlert({\n                type: 'danger',\n                message: error.message || error\n            });\n        }\n    }\n    refreshGrid(query) {\n        this.alerts.setAlerts([]);\n        this.query = query || this.query;\n        if (!this.query.hasOwnProperty('limit')) {\n            this.query.limit = 10;\n        }\n        if (!this.query.hasOwnProperty('skip')) {\n            this.query.skip = 0;\n        }\n        this.isLoading = true;\n        this.ref.detectChanges();\n        Formio.cache = {};\n        let loader = null;\n        if (this.items) {\n            loader = Promise.resolve(this.body.setRows(this.query, this.items));\n        }\n        else {\n            loader = this.body.load(this.formio, this.query);\n        }\n        return loader.then(info => {\n            this.isLoading = false;\n            this.initialized = true;\n            this.ref.detectChanges();\n        }).catch(error => this.onError(error));\n    }\n    setPage(num = -1) {\n        this.page = num !== -1 ? num : this.page;\n        if (!this.query.hasOwnProperty('limit')) {\n            this.query.limit = 10;\n        }\n        if (!this.query.hasOwnProperty('skip')) {\n            this.query.skip = 0;\n        }\n        this.query.skip = this.page * this.query.limit;\n        this.refreshGrid();\n    }\n    sortColumn(header) {\n        // Reset all other column sorts.\n        each(this.header.headers, (col) => {\n            if (col.key !== header.key) {\n                col.sort = '';\n            }\n        });\n        switch (header.sort) {\n            case 'asc':\n                header.sort = SortType.DESC;\n                this.query.sort = '-' + header.key;\n                break;\n            case 'desc':\n                header.sort = undefined;\n                delete this.query.sort;\n                break;\n            case undefined:\n                header.sort = SortType.ASC;\n                this.query.sort = header.key;\n                break;\n        }\n        this.refreshGrid();\n    }\n    pageChanged(page) {\n        this.setPage(page.page - 1);\n    }\n}\nFormioGridComponent.ɵfac = function FormioGridComponent_Factory(t) { return new (t || FormioGridComponent)(i0.ɵɵdirectiveInject(i1$1.FormioAlerts), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\nFormioGridComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FormioGridComponent, selectors: [[\"formio-grid\"]], viewQuery: function FormioGridComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n            i0.ɵɵviewQuery(_c1, 7, ViewContainerRef);\n            i0.ɵɵviewQuery(_c2, 7, ViewContainerRef);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerElement = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.bodyElement = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerElement = _t.first);\n        }\n    }, inputs: { footerPosition: \"footerPosition\", src: \"src\", items: \"items\", onForm: \"onForm\", query: \"query\", refresh: \"refresh\", columns: \"columns\", gridType: \"gridType\", size: \"size\", components: \"components\", formio: \"formio\", label: \"label\", createText: \"createText\", isActionAllowed: \"isActionAllowed\" }, outputs: { select: \"select\", rowSelect: \"rowSelect\", rowAction: \"rowAction\", createItem: \"createItem\", error: \"error\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 14, vars: 12, consts: [[\"headerTemplate\", \"\"], [\"bodyTemplate\", \"\"], [\"footerTemplate\", \"\"], [1, \"formio-grid\"], [3, \"alerts\"], [1, \"table\", \"table-bordered\", \"table-striped\", \"table-hover\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"isLoading\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngTemplateOutlet\"]], template: function FormioGridComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, FormioGridComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵtemplate(2, FormioGridComponent_ng_template_2_Template, 0, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵtemplate(4, FormioGridComponent_ng_template_4_Template, 0, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵelementStart(6, \"div\", 3);\n            i0.ɵɵelement(7, \"formio-alerts\", 4);\n            i0.ɵɵelementStart(8, \"table\", 5);\n            i0.ɵɵtemplate(9, FormioGridComponent_ng_container_9_Template, 1, 5, \"ng-container\", 6);\n            i0.ɵɵtemplate(10, FormioGridComponent_ng_container_10_Template, 1, 1, \"ng-container\", 7);\n            i0.ɵɵelement(11, \"formio-loader\", 8);\n            i0.ɵɵtemplate(12, FormioGridComponent_ng_container_12_Template, 1, 1, \"ng-container\", 7);\n            i0.ɵɵtemplate(13, FormioGridComponent_ng_container_13_Template, 1, 5, \"ng-container\", 6);\n            i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"alerts\", ctx.alerts);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.initialized && i0.ɵɵpureFunction2(6, _c4, ctx.footerPositions.top, ctx.footerPositions.both).indexOf(ctx.footerPosition) !== -1);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"isLoading\", ctx.isLoading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.initialized);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.initialized && i0.ɵɵpureFunction2(9, _c4, ctx.footerPositions.bottom, ctx.footerPositions.both).indexOf(ctx.footerPosition) !== -1);\n        }\n    }, directives: [i1$1.FormioAlertsComponent, i1.NgIf, i1.NgTemplateOutlet, i1$1.FormioLoaderComponent], styles: [\".formio-grid[_ngcontent-%COMP%]{position:relative;width:100%}.grid-refresh[_ngcontent-%COMP%]{height:400px;width:100%}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormioGridComponent, [{\n            type: Component,\n            args: [{ selector: 'formio-grid', template: \"<ng-template #headerTemplate></ng-template>\\n<ng-template #bodyTemplate></ng-template>\\n<ng-template #footerTemplate></ng-template>\\n<div class=\\\"formio-grid\\\">\\n  <formio-alerts [alerts]=\\\"alerts\\\"></formio-alerts>\\n  <table class=\\\"table table-bordered table-striped table-hover\\\">\\n    <ng-container *ngIf=\\\"initialized && [footerPositions.top, footerPositions.both].indexOf(footerPosition) !== -1\\\"\\n      [ngTemplateOutlet]=\\\"footer.template\\\" [ngTemplateOutletContext]=\\\"{ position: footerPositions.top, label: label }\\\">\\n    </ng-container>\\n    <ng-container *ngIf=\\\"initialized\\\"\\n      [ngTemplateOutlet]=\\\"header.template\\\"></ng-container>\\n    <formio-loader [isLoading]=\\\"isLoading\\\"></formio-loader>\\n    <ng-container *ngIf=\\\"initialized\\\" [ngTemplateOutlet]=\\\"body.template\\\"></ng-container>\\n    <ng-container *ngIf=\\\"initialized && [footerPositions.bottom, footerPositions.both].indexOf(footerPosition) !== -1\\\"\\n      [ngTemplateOutlet]=\\\"footer.template\\\" [ngTemplateOutletContext]=\\\"{ position: footerPositions.bottom, label: label }\\\">\\n    </ng-container>\\n  </table>\\n</div>\\n\", styles: [\".formio-grid{position:relative;width:100%}.grid-refresh{height:400px;width:100%}\\n\"] }]\n        }], function () { return [{ type: i1$1.FormioAlerts }, { type: i0.ComponentFactoryResolver }, { type: i0.ChangeDetectorRef }]; }, { footerPosition: [{\n                type: Input\n            }], src: [{\n                type: Input\n            }], items: [{\n                type: Input\n            }], onForm: [{\n                type: Input\n            }], query: [{\n                type: Input\n            }], refresh: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], gridType: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], components: [{\n                type: Input\n            }], formio: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], createText: [{\n                type: Input\n            }], isActionAllowed: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], rowSelect: [{\n                type: Output\n            }], rowAction: [{\n                type: Output\n            }], createItem: [{\n                type: Output\n            }], error: [{\n                type: Output\n            }], headerElement: [{\n                type: ViewChild,\n                args: ['headerTemplate', { read: ViewContainerRef, static: true }]\n            }], bodyElement: [{\n                type: ViewChild,\n                args: ['bodyTemplate', { read: ViewContainerRef, static: true }]\n            }], footerElement: [{\n                type: ViewChild,\n                args: ['footerTemplate', { read: ViewContainerRef, static: true }]\n            }] });\n})();\n\nclass FormioGrid {\n}\nFormioGrid.ɵfac = function FormioGrid_Factory(t) { return new (t || FormioGrid)(); };\nFormioGrid.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FormioGrid });\nFormioGrid.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [\n        FormioAlerts,\n        GridService\n    ], imports: [[\n            CommonModule,\n            FormsModule,\n            FormioModule,\n            RouterModule,\n            PaginationModule.forRoot()\n        ]] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormioGrid, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        FormioModule,\n                        RouterModule,\n                        PaginationModule.forRoot()\n                    ],\n                    declarations: [\n                        FormioGridComponent,\n                        FormGridHeaderComponent,\n                        FormGridBodyComponent,\n                        FormGridFooterComponent,\n                        SubmissionGridHeaderComponent,\n                        SubmissionGridBodyComponent,\n                        SubmissionGridFooterComponent,\n                        GridHeaderComponent,\n                        GridBodyComponent,\n                        GridFooterComponent,\n                        TimeSince\n                    ],\n                    exports: [\n                        FormioGridComponent\n                    ],\n                    entryComponents: [\n                        FormGridHeaderComponent,\n                        FormGridBodyComponent,\n                        FormGridFooterComponent,\n                        SubmissionGridHeaderComponent,\n                        SubmissionGridBodyComponent,\n                        SubmissionGridFooterComponent\n                    ],\n                    providers: [\n                        FormioAlerts,\n                        GridService\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FormioGrid, { declarations: [FormioGridComponent,\n            FormGridHeaderComponent,\n            FormGridBodyComponent,\n            FormGridFooterComponent,\n            SubmissionGridHeaderComponent,\n            SubmissionGridBodyComponent,\n            SubmissionGridFooterComponent,\n            GridHeaderComponent,\n            GridBodyComponent,\n            GridFooterComponent,\n            TimeSince], imports: [CommonModule,\n            FormsModule,\n            FormioModule,\n            RouterModule, i2$1.PaginationModule], exports: [FormioGridComponent] });\n})();\n\n/*\n * Public API Surface of angular-formio\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormGridBodyComponent, FormGridFooterComponent, FormGridHeaderComponent, FormioGrid, FormioGridComponent, GridBodyComponent, GridFooterComponent, GridHeaderComponent, GridService, SubmissionGridBodyComponent, SubmissionGridFooterComponent, SubmissionGridHeaderComponent };\n//# sourceMappingURL=formio-angular-grid.mjs.map\n","map":{"version":3,"file":"formio-angular-grid.mjs","sources":["../../../projects/angular-formio/grid/src/types/grid-footer-positions.ts","../../../projects/angular-formio/grid/src/GridHeaderComponent.ts","../../../projects/angular-formio/grid/src/types/grid-header.ts","../../../projects/angular-formio/grid/src/form/FormGridHeader.component.html","../../../projects/angular-formio/grid/src/form/FormGridHeader.component.ts","../../../projects/angular-formio/grid/src/grid.service.ts","../../../projects/angular-formio/grid/src/GridBodyComponent.ts","../../../projects/angular-formio/grid/src/form/time-since.pipe.ts","../../../projects/angular-formio/grid/src/form/FormGridBody.component.html","../../../projects/angular-formio/grid/src/form/FormGridBody.component.ts","../../../projects/angular-formio/grid/src/GridFooterComponent.ts","../../../projects/angular-formio/grid/src/form/FormGridFooter.component.html","../../../projects/angular-formio/grid/src/form/FormGridFooter.component.ts","../../../projects/angular-formio/grid/src/form/index.ts","../../../projects/angular-formio/grid/src/submission/SubmissionGridHeader.component.html","../../../projects/angular-formio/grid/src/submission/SubmissionGridHeader.component.ts","../../../projects/angular-formio/grid/src/submission/SubmissionGridBody.component.html","../../../projects/angular-formio/grid/src/submission/SubmissionGridBody.component.ts","../../../projects/angular-formio/grid/src/submission/SubmissionGridFooter.component.html","../../../projects/angular-formio/grid/src/submission/SubmissionGridFooter.component.ts","../../../projects/angular-formio/grid/src/submission/index.ts","../../../projects/angular-formio/grid/src/grid.component.html","../../../projects/angular-formio/grid/src/grid.component.ts","../../../projects/angular-formio/grid/src/grid.module.ts","../../../projects/angular-formio/grid/src/public_api.ts","../../../projects/angular-formio/grid/src/formio-angular-grid.ts"],"sourcesContent":["export enum GridFooterPositions {\n  bottom,\n  top,\n  both\n}\n","import { Output, EventEmitter, ViewChild, TemplateRef, Input, Component } from '@angular/core';\nimport {FormioPromiseService} from '@formio/angular';\nimport {GridHeader} from './types/grid-header';\n\n@Component({\n  template: ''\n})\nexport class GridHeaderComponent {\n  @Input() actionAllowed: any;\n  @Output() sort: EventEmitter<GridHeader>;\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n  public headers: Array<GridHeader>;\n  constructor() {\n    this.headers = [];\n    this.sort = new EventEmitter();\n  }\n\n  get numHeaders() {\n    return this.headers.length;\n  }\n\n  load(formio: FormioPromiseService, query?: any, columns?: Array<any>): Promise<any> {\n    return Promise.resolve([]);\n  }\n}\n","import {ComponentInstance} from '@formio/angular';\n\nexport interface GridHeader {\n  component?: ComponentInstance;\n  key: string;\n  sort?: SortType;\n  label: string;\n  renderCell?(cellValue: any, component?: ComponentInstance): string;\n}\n\nexport enum SortType {\n  ASC = 'asc',\n  DESC = 'desc'\n}\n","<ng-template>\n  <thead>\n    <tr>\n      <th>\n        <div class=\"row\">\n          <div class=\"col-sm-8\">\n            <a (click)=\"sort.emit(header)\">\n              {{ header.label }}&nbsp;<span [ngClass]=\"{'glyphicon-triangle-top fa-caret-up': (header.sort === 'asc'), 'glyphicon-triangle-bottom fa-caret-down': (header.sort === 'desc')}\" class=\"glyphicon fa\" *ngIf=\"header.sort\"></span>\n            </a>\n          </div>\n          <div class=\"col-sm-4\">\n            Operations\n          </div>\n        </div>\n      </th>\n    </tr>\n  </thead>\n</ng-template>\n","import {Component} from '@angular/core';\nimport {GridHeaderComponent} from '../GridHeaderComponent';\nimport {GridHeader, SortType} from '../types/grid-header';\n\n@Component({\n  selector: 'form-grid-header',\n  templateUrl: './FormGridHeader.component.html'\n})\nexport class FormGridHeaderComponent extends GridHeaderComponent {\n  public header: GridHeader;\n  load(formio?: any) {\n    this.header = {\n      label: 'Title',\n      key: 'title',\n      sort: SortType.ASC\n    };\n    this.headers = [this.header];\n    return Promise.resolve(this.headers);\n  }\n\n  get numHeaders() {\n    return 2;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport _intersection from 'lodash/intersection';\n\n@Injectable()\nexport class GridService {\n  public rows: Array<any>;\n  constructor() {}\n\n  setRows(rows) {\n    this.rows = rows;\n  }\n\n  getFormsPerPage() {\n    return this.rows?.length;\n  }\n}\n","import { Input, Output, EventEmitter, ViewChild, TemplateRef, Component } from '@angular/core';\nimport { each, clone } from 'lodash';\nimport { GridHeaderComponent } from './GridHeaderComponent';\nimport { GridService } from './grid.service';\nimport {FormioPromiseService} from '@formio/angular';\n\n@Component({\n  template: ''\n})\nexport class GridBodyComponent {\n  @Input() header: GridHeaderComponent;\n  @Input() actionAllowed: any;\n  @Output() rowSelect: EventEmitter<any>;\n  @Output() rowAction: EventEmitter<any>;\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n  public rows: Array<any>;\n  public loading: Boolean;\n  public firstItem = 0;\n  public lastItem = 0;\n  public skip = 0;\n  public limit = 0;\n  public total = 0;\n  constructor(public service: GridService) {\n    this.rowSelect = new EventEmitter();\n    this.rowAction = new EventEmitter();\n    this.loading = true;\n  }\n\n  load(formio: FormioPromiseService, query?: any): Promise<any> {\n    return formio.loadForm(query);\n  }\n\n  onRowSelect(event, row) {\n    event.preventDefault();\n    this.rowSelect.emit(row);\n  }\n\n  onRowAction(event, row, action) {\n    event.preventDefault();\n    this.rowAction.emit({ row, action });\n  }\n\n  /**\n   * Set the rows for this Grid body.\n   *\n   * @param query\n   * @param items\n   * @return any\n   */\n  setRows(query: any, items: any) {\n    this.rows = [];\n\n    if (typeof items !== 'object') {\n      this.firstItem = 0;\n      this.lastItem = 0;\n      this.total = 0;\n      this.skip = 0;\n      this.loading = false;\n      this.service.setRows(this.rows);\n      \n      return this.rows;\n    }\n\n    this.firstItem = query.skip + 1;\n    this.lastItem = this.firstItem + items.length - 1;\n    if (this.lastItem === 0) {\n      this.firstItem = 0;\n    }\n    this.total = items.serverCount;\n    this.limit = query.limit;\n    this.skip = Math.floor(items.skip / query.limit) + 1;\n    this.loading = false;\n    each(items, (item: any) => {\n      this.rows.push(clone(item));\n    });\n    this.service.setRows(this.rows);\n\n    return this.rows;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeSince'\n})\nexport class TimeSince implements PipeTransform {\n  transform(date: Date): string {\n    const elapsed = (new Date().getTime() - new Date(date).getTime()) / 1000;\n    let interval;\n    if (interval >= 1) {\n      return interval + ' year' + (interval > 1 ? 's' : '');\n    }\n    interval = Math.floor(elapsed / 2592000);\n    if (interval >= 1){\n      return interval + ' month' + (interval > 1 ? 's' : '');\n    }\n    interval = Math.floor(elapsed / 86400);\n    if (interval >= 1) {\n      return interval + ' day' + (interval > 1 ? 's' : '');\n    }\n    interval = Math.floor(elapsed / 3600);\n    if (interval >= 1) {\n      return interval + ' hour' + (interval > 1 ? 's' : '');\n    }\n    interval = Math.floor(elapsed / 60);\n    if (interval >= 1) {\n      return interval + ' minute' + (interval > 1 ? 's' : '');\n    }\n    return Math.floor(elapsed) + ' second' + (elapsed > 1 ? 's' : '');\n  }\n}","<ng-template>\n  <tbody *ngIf=\"rows\">\n    <tr *ngFor=\"let form of rows\">\n      <td>\n        <div class=\"row\">\n          <div class=\"col-sm-8\">\n            <a routerLink=\"{{form._id}}/view\" (click)=\"onRowSelect($event, form)\"><h5>{{ form.title }}</h5></a>\n            <div class=\"form-updated small text-muted\">\n              Updated {{ form.modified | timeSince }} ago\n            </div>\n          </div>\n          <div class=\"col-sm-4\">\n            <button *ngIf=\"actionAllowed('formView')\" class=\"btn btn-outline-secondary btn-sm form-btn form-btn-use\" (click)=\"onRowAction($event, form, 'view')\"><span class=\"fa fa-pencil\"></span> Enter Data</button>&nbsp;\n            <button *ngIf=\"actionAllowed('formSubmission')\" class=\"btn btn-outline-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'submission')\"><span class=\"fa fa-list-alt\"></span> View Data</button>&nbsp;\n            <button *ngIf=\"actionAllowed('formEdit')\" class=\"btn btn-outline-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'edit')\"><span class=\"fa fa-edit\"></span> Edit Form</button>&nbsp;\n            <button *ngIf=\"actionAllowed('formPermission')\" class=\"btn btn-outline-secondary btn-sm form-btn\" (click)=\"onRowAction($event, form, 'permissions')\"><span class=\"fa fa-lock\"></span> Permissions</button>&nbsp;\n            <button *ngIf=\"actionAllowed('formDelete')\" class=\"btn btn-danger btn-sm form-btn form-btn-delete\" (click)=\"onRowAction($event, form, 'delete')\" title=\"Delete form\"><span class=\"fa fa-trash\"></span></button>\n          </div>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { GridBodyComponent } from '../GridBodyComponent';\nimport { FormioPromiseService } from '@formio/angular';\n\n@Component({\n  selector: 'form-grid-body',\n  styleUrls: ['./FormGridBody.component.scss'],\n  templateUrl: './FormGridBody.component.html'\n})\nexport class FormGridBodyComponent extends GridBodyComponent {\n  load(formio: FormioPromiseService, query?: any) {\n    query = query || {};\n    return formio.loadForms({ params: query }).then((forms: any) => this.setRows(query, forms));\n  }\n}\n","import { GridFooterPositions } from './types/grid-footer-positions';\nimport { Input, Output, ViewChild, TemplateRef, EventEmitter, Component } from '@angular/core';\nimport { GridHeaderComponent } from './GridHeaderComponent';\nimport { GridBodyComponent } from './GridBodyComponent';\n\n@Component({\n  template: ''\n})\nexport class GridFooterComponent {\n  @Input() header: GridHeaderComponent;\n  @Input() body: GridBodyComponent;\n  @Input() createText: String;\n  @Input() size: number;\n  @Input() actionAllowed: any;\n  @Output() pageChanged: EventEmitter<any>;\n  @Output() createItem: EventEmitter<any>;\n  @ViewChild(TemplateRef, {static: true}) template: TemplateRef<any>;\n\n  public footerPositions = GridFooterPositions;\n\n  constructor() {\n    this.pageChanged = new EventEmitter();\n    this.createItem = new EventEmitter();\n  }\n}\n","<ng-template #footer let-position=\"position\" let-label=\"label\">\n  <thead class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.top\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\" [ngTemplateOutletContext]=\"{ label: label }\"></ng-container>\n  </thead>\n  <tfoot class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.bottom\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\" [ngTemplateOutletContext]=\"{ label: label }\"></ng-container>\n  </tfoot>\n</ng-template>\n\n<ng-template let-label=\"label\" #defaultFooterTemplate>\n  <tr>\n    <td *ngIf=\"header\" [colSpan]=\"header.numHeaders\">\n      <button *ngIf=\"actionAllowed('formCreate')\" class=\"btn btn-primary form-btn-use pull-left float-left\" (click)=\"createItem.emit('form')\"><em class=\"glyphicon glyphicon-plus fa fa-plus\"></em> {{ createText }}</button>\n      <span class=\"pull-right float-right item-counter\"><span class=\"page-num\">{{ body.firstItem }} - {{ body.lastItem }}</span> / {{ body.total }} total</span>\n      <span [attr.aria-label]=\"label\" role=\"navigation\">\n        <pagination [totalItems]=\"body.total\" [itemsPerPage]=\"body.limit\" [(ngModel)]=\"body.skip\" (pageChanged)=\"pageChanged.emit($event)\" [maxSize]=\"size\" class=\"justify-content-center pagination-sm\">\n        </pagination>\n      </span>\n    </td>\n  </tr>\n</ng-template>\n","import {Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { GridFooterComponent } from '../GridFooterComponent';\n\n@Component({\n  templateUrl: './FormGridFooter.component.html',\n  styleUrls: ['../grid.footer.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormGridFooterComponent extends GridFooterComponent implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (!this.createText) {\n      this.createText = 'Create Form';\n    }\n    if (!this.size) {\n      this.size = 7;\n    }\n  }\n}\n","import { FormGridHeaderComponent } from './FormGridHeader.component';\nimport { FormGridBodyComponent } from './FormGridBody.component';\nimport { FormGridFooterComponent } from './FormGridFooter.component';\nexport default {\n  header: FormGridHeaderComponent,\n  body: FormGridBodyComponent,\n  footer: FormGridFooterComponent\n};\n","<ng-template>\n  <thead>\n    <tr>\n      <th *ngFor=\"let header of headers\">\n        <a (click)=\"sort.emit(header)\">\n          {{ header.label }}&nbsp;<span [ngClass]=\"{'glyphicon-triangle-top': (header.sort === 'asc'), 'glyphicon-triangle-bottom': (header.sort === 'desc')}\" class=\"glyphicon\" *ngIf=\"header.sort\"></span>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</ng-template>\n","import {Component, EventEmitter} from '@angular/core';\nimport {Utils, Components, ExtendedComponentSchema} from 'formiojs';\nimport {GridHeaderComponent} from '../GridHeaderComponent';\nimport {FormioPromiseService} from '@formio/angular';\nimport {ComponentInstance, FormioForm} from '@formio/angular';\nimport {GridColumn} from '../types/grid-column';\nimport {GridHeader, SortType} from '../types/grid-header';\n\n@Component({\n  templateUrl: './SubmissionGridHeader.component.html'\n})\nexport class SubmissionGridHeaderComponent extends GridHeaderComponent {\n\n  // Map structure where the key is the path and the value is the component\n  formComponents: Map<string, ExtendedComponentSchema>;\n\n  load(formio: FormioPromiseService, query?: any, columns?: Array<GridColumn>) {\n    query = query || {};\n    return formio.loadForm({params: query}).then((form: FormioForm) => {\n      this.headers = [];\n      this.formComponents = new Map<string, ExtendedComponentSchema>();\n      this.setComponents(form.components);\n      columns ? columns.forEach(column => {\n          this.setHeader(this.getHeaderForColumn(column, this.formComponents.get(column.path)));\n        }) : this.setComponentsHeaders(this.formComponents);\n\n      return this.headers;\n    });\n  }\n\n  setHeader(header: GridHeader) {\n    this.headers.push(header);\n  }\n\n  getHeaderForColumn(column: GridColumn, component?: ExtendedComponentSchema, sort?: SortType) {\n    return {\n      label: column.label,\n      key: column.path,\n      sort: sort,\n      component: component ? Components.create(component, null, null, true) as ComponentInstance : undefined,\n      renderCell: column ? column.renderCell : undefined\n    };\n  }\n\n  getHeaderForComponent(component: ExtendedComponentSchema, path: string, sort?: SortType) {\n    return {\n      label: component.label,\n      key: path,\n      sort: sort,\n      component: component ? Components.create(component, null, null, true) as ComponentInstance : undefined,\n    };\n  }\n  // Set headers from components in case if columns are not provided\n  setComponentsHeaders(components: Map<string, ExtendedComponentSchema>, sort?: SortType) {\n    components.forEach((component, path) => {\n      if (\n        component.input &&\n        (!component.hasOwnProperty('tableView') || component.tableView)\n      ) {\n        this.setHeader(this.getHeaderForComponent(component, path, sort));\n      }\n    });\n  }\n\n  // Map components\n  setComponents(components) {\n    Utils.eachComponent(components, (component: ExtendedComponentSchema, newPath: string) => {\n      this.formComponents.set(`data.${newPath}`, component);\n    });\n  }\n}\n\n","<ng-template>\n  <tbody>\n    <tr *ngFor=\"let row of rows\" (click)=\"onRowSelect($event, row)\">\n      <td *ngFor=\"let rowHeader of header.headers\" [innerHTML]=\"view(row, rowHeader)\"></td>\n    </tr>\n  </tbody>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { each, get } from 'lodash';\nimport { GridBodyComponent } from '../GridBodyComponent';\nimport {FormioPromiseService} from '@formio/angular';\nimport { GridHeader } from '../types/grid-header';\nimport {FormioSubmission} from '@formio/angular';\n@Component({\n  templateUrl: './SubmissionGridBody.component.html'\n})\nexport class SubmissionGridBodyComponent extends GridBodyComponent {\n  load(formio: FormioPromiseService, query?: any) {\n    query = query || {};\n    return formio.loadSubmissions({ params: query })\n      .then((submissions: any) => this.setRows(query, submissions));\n  }\n\n  /**\n   * Render the cell data.\n   *\n   * @param submission\n   * @param header\n   * @return any\n   */\n  view(submission: FormioSubmission, header: GridHeader): string {\n    const cellValue: any = get(submission, header.key);\n    if (header.renderCell) {\n      return header.renderCell(cellValue, header.component);\n    } else {\n      if (header.component) {\n        if (header.component.getView) {\n          return header.component.getView(cellValue);\n        }\n        return header.component.asString(cellValue);\n      } else {\n        return cellValue.toString();\n      }\n    }\n  }\n}\n","<ng-template #footer let-position=\"position\">\n  <thead class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.top\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\"></ng-container>\n  </thead>\n  <tfoot class=\"formio-grid-footer\" *ngIf=\"position === footerPositions.bottom\">\n    <ng-container [ngTemplateOutlet]=\"defaultFooterTemplate\"></ng-container>\n  </tfoot>\n</ng-template>\n\n<ng-template #defaultFooterTemplate>\n  <tr>\n    <td *ngIf=\"header\" [colSpan]=\"header.numHeaders\">\n      <button *ngIf=\"actionAllowed('submissionCreate') && createText\" class=\"btn btn-primary pull-left float-left\" (click)=\"createItem.emit('form')\"><em class=\"glyphicon glyphicon-plus fa fa-plus\"></em> {{ createText }}</button>\n      <span class=\"pull-right float-right item-counter\"><span class=\"page-num\">{{ body.firstItem }} - {{ body.lastItem }}</span> / {{ body.total }} total</span>\n      <pagination [totalItems]=\"body.total\" [itemsPerPage]=\"body.limit\" [(ngModel)]=\"body.skip\" (pageChanged)=\"pageChanged.emit($event)\" [maxSize]=\"size\" class=\"justify-content-center pagination-sm\"></pagination>\n    </td>\n  </tr>\n</ng-template>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport { GridFooterComponent } from '../GridFooterComponent';\n\n@Component({\n  templateUrl: './SubmissionGridFooter.component.html',\n  styleUrls: ['../grid.footer.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SubmissionGridFooterComponent extends GridFooterComponent implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (!this.size) {\n      this.size = 7;\n    }\n  }\n}\n","import { SubmissionGridHeaderComponent } from './SubmissionGridHeader.component';\nimport { SubmissionGridBodyComponent } from './SubmissionGridBody.component';\nimport { SubmissionGridFooterComponent } from './SubmissionGridFooter.component';\nexport default {\n  header: SubmissionGridHeaderComponent,\n  body: SubmissionGridBodyComponent,\n  footer: SubmissionGridFooterComponent\n};\n","<ng-template #headerTemplate></ng-template>\n<ng-template #bodyTemplate></ng-template>\n<ng-template #footerTemplate></ng-template>\n<div class=\"formio-grid\">\n  <formio-alerts [alerts]=\"alerts\"></formio-alerts>\n  <table class=\"table table-bordered table-striped table-hover\">\n    <ng-container *ngIf=\"initialized && [footerPositions.top, footerPositions.both].indexOf(footerPosition) !== -1\"\n      [ngTemplateOutlet]=\"footer.template\" [ngTemplateOutletContext]=\"{ position: footerPositions.top, label: label }\">\n    </ng-container>\n    <ng-container *ngIf=\"initialized\"\n      [ngTemplateOutlet]=\"header.template\"></ng-container>\n    <formio-loader [isLoading]=\"isLoading\"></formio-loader>\n    <ng-container *ngIf=\"initialized\" [ngTemplateOutlet]=\"body.template\"></ng-container>\n    <ng-container *ngIf=\"initialized && [footerPositions.bottom, footerPositions.both].indexOf(footerPosition) !== -1\"\n      [ngTemplateOutlet]=\"footer.template\" [ngTemplateOutletContext]=\"{ position: footerPositions.bottom, label: label }\">\n    </ng-container>\n  </table>\n</div>\n","import { GridFooterPositions } from './types/grid-footer-positions';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport {FormioAlerts} from '@formio/angular';\nimport {each} from 'lodash';\nimport {Formio} from 'formiojs';\nimport {GridHeaderComponent} from './GridHeaderComponent';\nimport {GridBodyComponent} from './GridBodyComponent';\nimport {GridFooterComponent} from './GridFooterComponent';\nimport FormComponents from './form/index';\nimport SubmissionComponents from './submission/index';\nimport {FormioPromiseService} from '@formio/angular';\nimport {GridColumn} from './types/grid-column';\nimport {GridHeader, SortType} from './types/grid-header';\n\n@Component({\n  selector: 'formio-grid',\n  styleUrls: ['./grid.component.scss'],\n  templateUrl: './grid.component.html'\n})\nexport class FormioGridComponent implements OnChanges, OnInit, AfterViewInit {\n  @Input() footerPosition = GridFooterPositions.bottom;\n  @Input() src?: string;\n  @Input() items?: Array<any>;\n  @Input() onForm?: Promise<any>;\n  @Input() query?: any;\n  @Input() refresh?: EventEmitter<object>;\n  @Input() columns?: Array<GridColumn>;\n  @Input() gridType?: string;\n  @Input() size?: number;\n  @Input() components?: any;\n  @Input() formio?: FormioPromiseService;\n  @Input() label?: string;\n  @Input() createText: String;\n  @Input() isActionAllowed: any;\n  @Output() select: EventEmitter<object>;\n  @Output() rowSelect: EventEmitter<object>;\n  @Output() rowAction: EventEmitter<object>;\n  @Output() createItem: EventEmitter<any>;\n  @Output() error: EventEmitter<any>;\n  @ViewChild('headerTemplate', {read: ViewContainerRef, static: true}) headerElement: ViewContainerRef;\n  @ViewChild('bodyTemplate', {read: ViewContainerRef, static: true}) bodyElement: ViewContainerRef;\n  @ViewChild('footerTemplate', {read: ViewContainerRef, static: true}) footerElement: ViewContainerRef;\n\n  public page = 0;\n  public isLoading = false;\n  public initialized = false;\n  public header: GridHeaderComponent;\n  public body: GridBodyComponent;\n  public footer: GridFooterComponent;\n  public footerPositions = GridFooterPositions;\n\n  constructor(\n    public alerts: FormioAlerts,\n    private resolver: ComponentFactoryResolver,\n    private ref: ChangeDetectorRef\n  ) {\n    this.select = this.rowSelect = new EventEmitter();\n    this.rowAction = new EventEmitter();\n    this.createItem = new EventEmitter();\n    this.error = new EventEmitter();\n    this.isLoading = true;\n  }\n\n  createComponent(property, component) {\n    const factory = this.resolver.resolveComponentFactory(component);\n    const componentRef = property.createComponent(factory);\n    return componentRef.instance;\n  }\n\n  loadGrid(src?: string) {\n    // If no source is provided, then skip.\n    if (!src && !this.formio) {\n      return;\n    }\n    // Do not double load.\n    if (this.formio && this.src && (src === this.src)) {\n      return;\n    }\n\n    if (src) {\n      this.src = src;\n      this.formio = new FormioPromiseService(this.src, { formOnly: true });\n    }\n\n    // Load the header.\n    this.header.load(this.formio, {}, this.columns)\n      .then(() => this.setPage(0))\n      .catch(error => this.onError(error));\n  }\n\n  ngOnInit() {\n    // Create our components.\n    const comps = this.components || ((this.gridType === 'form') ? FormComponents : SubmissionComponents);\n\n    this.header = this.createComponent(this.headerElement, comps.header);\n    this.header.actionAllowed = this.actionAllowed.bind(this);\n    this.header.sort.subscribe(header => this.sortColumn(header));\n\n    this.body = this.createComponent(this.bodyElement, comps.body);\n    this.body.header = this.header;\n    this.body.actionAllowed = this.actionAllowed.bind(this);\n    this.body.rowSelect.subscribe(row => this.rowSelect.emit(row));\n    this.body.rowAction.subscribe(action => this.rowAction.emit(action));\n\n    this.footer = this.createComponent(this.footerElement, comps.footer);\n    this.footer.header = this.header;\n    this.footer.body = this.body;\n    this.footer.actionAllowed = this.actionAllowed.bind(this);\n    this.footer.createText = this.createText;\n    this.footer.size = this.size;\n    this.footer.pageChanged.subscribe(page => this.pageChanged(page));\n    this.footer.createItem.subscribe(item => this.createItem.emit(item));\n  }\n\n  ngOnChanges(changes: any) {\n    if (this.initialized) {\n      if (\n        (changes.src && changes.src.currentValue) ||\n        (changes.formio && changes.formio.currentValue)\n      ) {\n        this.loadGrid(changes.src.currentValue);\n      }\n\n      if (changes.items && changes.items.currentValue) {\n        this.refreshGrid();\n      }\n    }\n\n    if (this.footer &&\n        (changes.createText && changes.createText.currentValue)) {\n      this.footer.createText = changes.createText.currentValue;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.alerts.setAlerts([]);\n    this.query = this.query || {};\n    if (this.refresh) {\n      this.refresh.subscribe((query: object) => this.refreshGrid(query));\n    }\n    this.loadGrid(this.src);\n    this.initialized = true;\n    this.ref.detectChanges();\n  }\n\n  actionAllowed(action) {\n    if (this.isActionAllowed) {\n      return this.isActionAllowed(action);\n    } else {\n      return true;\n    }\n  }\n\n  onError(error: any) {\n    this.isLoading = false;\n    this.error.emit(error);\n    if (typeof error === 'string' || error.message) {\n      this.alerts.setAlert({\n        type: 'danger',\n        message: error.message || error\n      });\n    }\n  }\n\n  refreshGrid(query?: any) {\n    this.alerts.setAlerts([]);\n    this.query = query || this.query;\n    if (!this.query.hasOwnProperty('limit')) {\n      this.query.limit = 10;\n    }\n    if (!this.query.hasOwnProperty('skip')) {\n      this.query.skip = 0;\n    }\n    this.isLoading = true;\n    this.ref.detectChanges();\n    Formio.cache = {};\n    let loader = null;\n    if (this.items) {\n      loader = Promise.resolve(this.body.setRows(this.query, this.items));\n    } else {\n      loader = this.body.load(this.formio, this.query);\n    }\n\n    return loader.then(info => {\n      this.isLoading = false;\n      this.initialized = true;\n      this.ref.detectChanges();\n    }).catch(error => this.onError(error));\n  }\n\n  setPage(num = -1) {\n    this.page = num !== -1 ? num : this.page;\n    if (!this.query.hasOwnProperty('limit')) {\n      this.query.limit = 10;\n    }\n    if (!this.query.hasOwnProperty('skip')) {\n      this.query.skip = 0;\n    }\n    this.query.skip = this.page * this.query.limit;\n    this.refreshGrid();\n  }\n\n  sortColumn(header: GridHeader) {\n    // Reset all other column sorts.\n    each(this.header.headers, (col: any) => {\n      if (col.key !== header.key) {\n        col.sort = '';\n      }\n    });\n    switch (header.sort) {\n      case 'asc':\n        header.sort = SortType.DESC;\n        this.query.sort = '-' + header.key;\n        break;\n      case 'desc':\n        header.sort = undefined;\n        delete this.query.sort;\n        break;\n      case undefined:\n        header.sort = SortType.ASC;\n        this.query.sort = header.key;\n        break;\n    }\n    this.refreshGrid();\n  }\n\n  pageChanged(page: any) {\n    this.setPage(page.page - 1);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { FormioModule } from '@formio/angular';\nimport { FormioAlerts } from '@formio/angular';\nimport { FormioGridComponent } from './grid.component';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { FormGridHeaderComponent } from './form/FormGridHeader.component';\nimport { FormGridBodyComponent } from './form/FormGridBody.component';\nimport { FormGridFooterComponent } from './form/FormGridFooter.component';\nimport { SubmissionGridHeaderComponent } from './submission/SubmissionGridHeader.component';\nimport { SubmissionGridBodyComponent } from './submission/SubmissionGridBody.component';\nimport { SubmissionGridFooterComponent } from './submission/SubmissionGridFooter.component';\nimport { GridHeaderComponent } from './GridHeaderComponent';\nimport { GridBodyComponent } from './GridBodyComponent';\nimport { GridFooterComponent } from './GridFooterComponent';\nimport { GridService } from './grid.service';\nimport { TimeSince } from './form/time-since.pipe'\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    FormioModule,\n    RouterModule,\n    PaginationModule.forRoot()\n  ],\n  declarations: [\n    FormioGridComponent,\n    FormGridHeaderComponent,\n    FormGridBodyComponent,\n    FormGridFooterComponent,\n    SubmissionGridHeaderComponent,\n    SubmissionGridBodyComponent,\n    SubmissionGridFooterComponent,\n    GridHeaderComponent,\n    GridBodyComponent,\n    GridFooterComponent,\n    TimeSince\n  ],\n  exports: [\n    FormioGridComponent\n  ],\n  entryComponents: [\n    FormGridHeaderComponent,\n    FormGridBodyComponent,\n    FormGridFooterComponent,\n    SubmissionGridHeaderComponent,\n    SubmissionGridBodyComponent,\n    SubmissionGridFooterComponent\n  ],\n  providers: [\n    FormioAlerts,\n    GridService\n  ]\n})\nexport class FormioGrid {}\n","/*\n * Public API Surface of angular-formio\n */\n\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,IAAY,mBAIX;AAJD,WAAY,mBAAmB;IAC7B,iEAAM,CAAA;IACN,2DAAG,CAAA;IACH,6DAAI,CAAA;AACN,CAAC,EAJW,mBAAmB,KAAnB,mBAAmB;;MCOlB,mBAAmB;IAK9B;QACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,YAAY,EAAE,CAAC;KAChC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC5B;IAED,IAAI,CAAC,MAA4B,EAAE,KAAW,EAAE,OAAoB;QAClE,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;KAC5B;;sFAhBU,mBAAmB;sEAAnB,mBAAmB;;2BAGnB,WAAW;;;;;;;;4EAHX,mBAAmB;kBAH/B,SAAS;mBAAC;oBACT,QAAQ,EAAE,EAAE;iBACb;0CAEU,aAAa;sBAArB,KAAK;gBACI,IAAI;sBAAb,MAAM;gBACiC,QAAQ;sBAA/C,SAAS;uBAAC,WAAW,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;ACAxC,IAAY,QAGX;AAHD,WAAY,QAAQ;IAClB,uBAAW,CAAA;IACX,yBAAa,CAAA;AACf,CAAC,EAHW,QAAQ,KAAR,QAAQ;;;;;QCHkB,0BAAuM;;;;QAAjM,mHAAgJ;;;;;;QAN1L,6BAAO,SAAA,SAAA,aAAA,aAAA,WAAA;QAKM,uKAAS,+BAAiB,IAAC;QAC5B,YAAwB;QAAA,wFAAuM;QACjO,iBAAI,EAAA;QAEN,8BAAsB;QACpB,4BACF;QAAA,iBAAM,EAAA,EAAA,EAAA,EAAA;;;;QALF,eAAwB;QAAxB,yDAAwB;QAA6K,eAAiB;QAAjB,yCAAiB;;;MCCvN,gCAAgC,mBAAmB;IAE9D,IAAI,CAAC,MAAY;QACf,IAAI,CAAC,MAAM,GAAG;YACZ,KAAK,EAAE,OAAO;YACd,GAAG,EAAE,OAAO;YACZ,IAAI,EAAE,QAAQ,CAAC,GAAG;SACnB,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACtC;IAED,IAAI,UAAU;QACZ,OAAO,CAAC,CAAC;KACV;;2QAdU,uBAAuB,SAAvB,uBAAuB;0EAAvB,uBAAuB;;YDRpC,sFAiBc;;;;4ECTD,uBAAuB;kBAJnC,SAAS;+BACE,kBAAkB;;;;MCDjB,WAAW;IAEtB,iBAAgB;IAEhB,OAAO,CAAC,IAAI;QACV,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAED,eAAe;;QACb,OAAO,MAAA,IAAI,CAAC,IAAI,0CAAE,MAAM,CAAC;KAC1B;;sEAVU,WAAW;iEAAX,WAAW,WAAX,WAAW;;4EAAX,WAAW;kBADvB,UAAU;;;;MCME,iBAAiB;IAa5B,YAAmB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;QALhC,cAAS,GAAG,CAAC,CAAC;QACd,aAAQ,GAAG,CAAC,CAAC;QACb,SAAI,GAAG,CAAC,CAAC;QACT,UAAK,GAAG,CAAC,CAAC;QACV,UAAK,GAAG,CAAC,CAAC;QAEf,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAE,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAE,CAAC;QACpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACrB;IAED,IAAI,CAAC,MAA4B,EAAE,KAAW;QAC5C,OAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC/B;IAED,WAAW,CAAC,KAAK,EAAE,GAAG;QACpB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC1B;IAED,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM;QAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;KACtC;;;;;;;;IASD,OAAO,CAAC,KAAU,EAAE,KAAU;QAC5B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAEf,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEhC,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QAClD,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACpB;QACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,KAAK,EAAE,CAAC,IAAS;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;SAC7B,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEhC,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;kFArEU,iBAAiB;oEAAjB,iBAAiB;;2BAKjB,WAAW;;;;;;;;4EALX,iBAAiB;kBAH7B,SAAS;mBAAC;oBACT,QAAQ,EAAE,EAAE;iBACb;+DAEU,MAAM;sBAAd,KAAK;gBACG,aAAa;sBAArB,KAAK;gBACI,SAAS;sBAAlB,MAAM;gBACG,SAAS;sBAAlB,MAAM;gBACiC,QAAQ;sBAA/C,SAAS;uBAAC,WAAW,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;MCT3B,SAAS;IACpB,SAAS,CAAC,IAAU;QAClB,MAAM,OAAO,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC;QACzE,IAAI,QAAQ,CAAC;QACb,IAAI,QAAQ,IAAI,CAAC,EAAE;YACjB,OAAO,QAAQ,GAAG,OAAO,IAAI,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;SACvD;QACD,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;QACzC,IAAI,QAAQ,IAAI,CAAC,EAAC;YAChB,OAAO,QAAQ,GAAG,QAAQ,IAAI,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;SACxD;QACD,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;QACvC,IAAI,QAAQ,IAAI,CAAC,EAAE;YACjB,OAAO,QAAQ,GAAG,MAAM,IAAI,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;SACtD;QACD,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;QACtC,IAAI,QAAQ,IAAI,CAAC,EAAE;YACjB,OAAO,QAAQ,GAAG,OAAO,IAAI,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;SACvD;QACD,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;QACpC,IAAI,QAAQ,IAAI,CAAC,EAAE;YACjB,OAAO,QAAQ,GAAG,SAAS,IAAI,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;SACzD;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,SAAS,IAAI,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;KACnE;;kEAxBU,SAAS;2EAAT,SAAS;;4EAAT,SAAS;kBAHrB,IAAI;mBAAC;oBACJ,IAAI,EAAE,WAAW;iBAClB;;;;;;;QCQW,kCAAqJ;QAA5C,uPAAS,oCAA0B,MAAM,CAAC,IAAC;QAAC,2BAAkC;QAAC,2BAAU;QAAA,iBAAS;;;;;;QAC3M,kCAAoJ;QAAlD,wPAAS,qCAA0B,YAAY,CAAC,IAAC;QAAC,2BAAoC;QAAC,0BAAS;QAAA,iBAAS;;;;;;QAC3M,kCAAwI;QAA5C,wPAAS,qCAA0B,MAAM,CAAC,IAAC;QAAC,2BAAgC;QAAC,0BAAS;QAAA,iBAAS;;;;;;QAC3L,kCAAqJ;QAAnD,wPAAS,qCAA0B,aAAa,CAAC,IAAC;QAAC,2BAAgC;QAAC,4BAAW;QAAA,iBAAS;;;;;;QAC1M,kCAAqK;QAAlE,wPAAS,qCAA0B,QAAQ,CAAC,IAAC;QAAqB,2BAAiC;QAAA,iBAAS;;;;;;QAdvN,0BAA8B,SAAA,aAAA,aAAA,WAAA;QAIY,sPAAS,oCAAyB,IAAC;QAAC,0BAAI;QAAA,YAAgB;QAAA,iBAAK,EAAA;QAC/F,8BAA2C;QACzC,YACF;;QAAA,iBAAM,EAAA;QAER,+BAAsB;QACpB,yGAA2M;QAAA,wBAC3M;QAAA,yGAA2M;QAAA,wBAC3M;QAAA,yGAA2L;QAAA,wBAC3L;QAAA,yGAA0M;QAAA,wBAC1M;QAAA,yGAA+M;QACjN,iBAAM,EAAA,EAAA,EAAA;;;;;QAXD,eAA8B;QAA9B,iEAA8B;QAAyC,eAAgB;QAAhB,mCAAgB;QAExF,eACF;QADE,mFACF;QAGS,eAA+B;QAA/B,uDAA+B;QAC/B,eAAqC;QAArC,6DAAqC;QACrC,eAA+B;QAA/B,uDAA+B;QAC/B,eAAqC;QAArC,6DAAqC;QACrC,eAAiC;QAAjC,yDAAiC;;;;;QAfpD,6BAAoB;QAClB,4FAkBK;QACP,iBAAQ;;;;QAnBe,eAAO;QAAP,qCAAO;;;;;QAD9B,wFAoBQ;;;;QApBA,kCAAU;;;MCQP,8BAA8B,iBAAiB;IAC1D,IAAI,CAAC,MAA4B,EAAE,KAAW;QAC5C,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAAU,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KAC7F;;iQAJU,qBAAqB,SAArB,qBAAqB;wEAArB,qBAAqB;;YDTlC,mFAsBc;;;;4ECbD,qBAAqB;kBALjC,SAAS;+BACE,gBAAgB;;;;MCGf,mBAAmB;IAY9B;QAFO,oBAAe,GAAG,mBAAmB,CAAC;QAG3C,IAAI,CAAC,WAAW,GAAG,IAAI,YAAY,EAAE,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;KACtC;;sFAfU,mBAAmB;sEAAnB,mBAAmB;;2BAQnB,WAAW;;;;;;;;4EARX,mBAAmB;kBAH/B,SAAS;mBAAC;oBACT,QAAQ,EAAE,EAAE;iBACb;0CAEU,MAAM;sBAAd,KAAK;gBACG,IAAI;sBAAZ,KAAK;gBACG,UAAU;sBAAlB,KAAK;gBACG,IAAI;sBAAZ,KAAK;gBACG,aAAa;sBAArB,KAAK;gBACI,WAAW;sBAApB,MAAM;gBACG,UAAU;sBAAnB,MAAM;gBACiC,QAAQ;sBAA/C,SAAS;uBAAC,WAAW,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;;;;QCftC,gCAA2E;QACzE,2BAAqH;QACvH,iBAAQ;;;;;;QADQ,eAA0C;QAA1C,sCAA0C,mEAAA;;;;;QAE1D,gCAA8E;QAC5E,2BAAqH;QACvH,iBAAQ;;;;;;QADQ,eAA0C;QAA1C,sCAA0C,mEAAA;;;;;QAJ1D,0FAEQ;QACR,0FAEQ;;;;;QAL2B,iEAAsC;QAGtC,eAAyC;QAAzC,oEAAyC;;;;;;QAQxE,kCAAwI;QAAlC,6LAAS,wBAAgB,MAAM,CAAC,IAAC;QAAC,yBAAqD;QAAC,YAAgB;QAAA,iBAAS;;;;QAAzB,eAAgB;QAAhB,kDAAgB;;;;;;QADhN,6BAAiD;QAC/C,iGAAuN;QACvN,+BAAkD,cAAA;QAAuB,YAA0C;QAAA,iBAAO;QAAC,YAAwB;QAAA,iBAAO;QAC1J,gCAAkD,qBAAA;QACkB,4OAAuB,6LAAgB,gCAAwB,IAAxC;QACzF,iBAAa,EAAA,EAAA;;;;;QALE,mDAA6B;QACrC,eAAiC;QAAjC,0DAAiC;QAC+B,eAA0C;QAA1C,mFAA0C;QAAQ,eAAwB;QAAxB,0DAAwB;QAC7I,eAAyB;QAAzB,uCAAyB;QACjB,eAAyB;QAAzB,+CAAyB,oCAAA,8BAAA,yBAAA;;;;;QAL3C,0BAAI;QACF,qFAOK;QACP,iBAAK;;;;QARE,eAAY;QAAZ,oCAAY;;;MCHR,gCAAgC,mBAAmB;IAE9D;QACE,KAAK,EAAE,CAAC;KACT;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;SACjC;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACf;KACF;;8FAbU,uBAAuB;0EAAvB,uBAAuB;;YDRpC,yHAOc;YAEd,yHAWc;;;;4ECZD,uBAAuB;kBALnC,SAAS;oCAGO,iBAAiB,CAAC,IAAI;;;;ACHvC,qBAAe;IACb,MAAM,EAAE,uBAAuB;IAC/B,IAAI,EAAE,qBAAqB;IAC3B,MAAM,EAAE,uBAAuB;CAChC;;;;;QCFiC,0BAA0K;;;;QAApK,2GAAsH;;;;;;QAFxJ,0BAAmC,WAAA;QAC9B,gPAAS,2BAAiB,IAAC;QAC5B,YAAwB;QAAA,mGAA0K;QACpM,iBAAI,EAAA;;;;QADF,eAAwB;QAAxB,qDAAwB;QAAgJ,eAAiB;QAAjB,qCAAiB;;;;;QAJjM,6BAAO,SAAA;QAEH,0FAIK;QACP,iBAAK,EAAA;;;;QALoB,eAAU;QAAV,wCAAU;;;MCQ1B,sCAAsC,mBAAmB;IAKpE,IAAI,CAAC,MAA4B,EAAE,KAAW,EAAE,OAA2B;QACzE,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAgB;YAC5D,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,EAAmC,CAAC;YACjE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACpC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM;gBAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACvF,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAEtD,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB,CAAC,CAAC;KACJ;IAED,SAAS,CAAC,MAAkB;QAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3B;IAED,kBAAkB,CAAC,MAAkB,EAAE,SAAmC,EAAE,IAAe;QACzF,OAAO;YACL,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,GAAG,EAAE,MAAM,CAAC,IAAI;YAChB,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAsB,GAAG,SAAS;YACtG,UAAU,EAAE,MAAM,GAAG,MAAM,CAAC,UAAU,GAAG,SAAS;SACnD,CAAC;KACH;IAED,qBAAqB,CAAC,SAAkC,EAAE,IAAY,EAAE,IAAe;QACrF,OAAO;YACL,KAAK,EAAE,SAAS,CAAC,KAAK;YACtB,GAAG,EAAE,IAAI;YACT,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAsB,GAAG,SAAS;SACvG,CAAC;KACH;;IAED,oBAAoB,CAAC,UAAgD,EAAE,IAAe;QACpF,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,IAAI;YACjC,IACE,SAAS,CAAC,KAAK;iBACd,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,SAAS,CAAC,SAAS,CAAC,EAC/D;gBACA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;aACnE;SACF,CAAC,CAAC;KACJ;;IAGD,aAAa,CAAC,UAAU;QACtB,KAAK,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,SAAkC,EAAE,OAAe;YAClF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,OAAO,EAAE,EAAE,SAAS,CAAC,CAAC;SACvD,CAAC,CAAC;KACJ;;ySA1DU,6BAA6B,SAA7B,6BAA6B;gFAA7B,6BAA6B;;YDX1C,2FAUc;;;;4ECCD,6BAA6B;kBAHzC,SAAS;;;;;;;QCLJ,wBAAqF;;;;;;QAAxC,gFAAkC;;;;;;QADjF,6BAAgE;QAAnC,kPAAS,kCAAwB,IAAC;QAC7D,6FAAqF;QACvF,iBAAK;;;;QADuB,eAAiB;QAAjB,+CAAiB;;;;;QAF/C,6BAAO;QACL,wFAEK;QACP,iBAAQ;;;;QAHc,eAAO;QAAP,qCAAO;;;MCOlB,oCAAoC,iBAAiB;IAChE,IAAI,CAAC,MAA4B,EAAE,KAAW;QAC5C,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACpB,OAAO,MAAM,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;aAC7C,IAAI,CAAC,CAAC,WAAgB,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC;KACjE;;;;;;;;IASD,IAAI,CAAC,UAA4B,EAAE,MAAkB;QACnD,MAAM,SAAS,GAAQ,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,MAAM,CAAC,UAAU,EAAE;YACrB,OAAO,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;SACvD;aAAM;YACL,IAAI,MAAM,CAAC,SAAS,EAAE;gBACpB,IAAI,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE;oBAC5B,OAAO,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;iBAC5C;gBACD,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aAC7C;iBAAM;gBACL,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;aAC7B;SACF;KACF;;+RA5BU,2BAA2B,SAA3B,2BAA2B;8EAA3B,2BAA2B;;YDTxC,yFAMc;;;;4ECGD,2BAA2B;kBAHvC,SAAS;;;;;;;QCLR,gCAA2E;QACzE,2BAAwE;QAC1E,iBAAQ;;;;;QADQ,eAA0C;QAA1C,sCAA0C;;;;;QAE1D,gCAA8E;QAC5E,2BAAwE;QAC1E,iBAAQ;;;;;QADQ,eAA0C;QAA1C,sCAA0C;;;;;QAJ1D,gGAEQ;QACR,gGAEQ;;;;;QAL2B,iEAAsC;QAGtC,eAAyC;QAAzC,oEAAyC;;;;;;QAQxE,kCAA+I;QAAlC,kMAAS,uBAAgB,MAAM,CAAC,IAAC;QAAC,yBAAqD;QAAC,YAAgB;QAAA,iBAAS;;;;QAAzB,eAAgB;QAAhB,iDAAgB;;;;;;QADvN,6BAAiD;QAC/C,uGAA8N;QAC9N,+BAAkD,cAAA;QAAuB,YAA0C;QAAA,iBAAO;QAAC,YAAwB;QAAA,iBAAO;QAC1J,sCAAiM;QAA/H,kPAAuB,mMAAgB,gCAAwB,IAAxC;QAAwG,iBAAa,EAAA;;;;QAH7L,kDAA6B;QACrC,eAAqD;QAArD,oFAAqD;QACW,eAA0C;QAA1C,iFAA0C;QAAQ,eAAwB;QAAxB,yDAAwB;QACvI,eAAyB;QAAzB,8CAAyB,mCAAA,6BAAA,wBAAA;;;;;QAJzC,0BAAI;QACF,0FAIK;QACP,iBAAK;;;;QALE,eAAY;QAAZ,oCAAY;;;MCHR,sCAAsC,mBAAmB;IAEpE;QACE,KAAK,EAAE,CAAC;KACT;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACf;KACF;;0GAVU,6BAA6B;gFAA7B,6BAA6B;;YDR1C,+HAOc;YAEd,+HAQc;;;;4ECTD,6BAA6B;kBALzC,SAAS;oCAGO,iBAAiB,CAAC,IAAI;;;;ACHvC,2BAAe;IACb,MAAM,EAAE,6BAA6B;IACrC,IAAI,EAAE,2BAA2B;IACjC,MAAM,EAAE,6BAA6B;CACtC;;;;;;;;;;;QCDG,2BAEe;;;;QADb,yDAAoC,iGAAA;;;;;QAEtC,4BACsD;;;;QAApD,yDAAoC;;;;;QAEtC,4BAAoF;;;;QAAlD,uDAAkC;;;;;QACpE,2BAEe;;;;QADb,yDAAoC,oGAAA;;;;MCiB7B,mBAAmB;IAgC9B,YACS,MAAoB,EACnB,QAAkC,EAClC,GAAsB;QAFvB,WAAM,GAAN,MAAM,CAAc;QACnB,aAAQ,GAAR,QAAQ,CAA0B;QAClC,QAAG,GAAH,GAAG,CAAmB;QAlCvB,mBAAc,GAAG,mBAAmB,CAAC,MAAM,CAAC;QAuB9C,SAAI,GAAG,CAAC,CAAC;QACT,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAG,KAAK,CAAC;QAIpB,oBAAe,GAAG,mBAAmB,CAAC;QAO3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAE,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAE,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;QACrC,IAAI,CAAC,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;IAED,eAAe,CAAC,QAAQ,EAAE,SAAS;QACjC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;QACjE,MAAM,YAAY,GAAG,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACvD,OAAO,YAAY,CAAC,QAAQ,CAAC;KAC9B;IAED,QAAQ,CAAC,GAAY;;QAEnB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACxB,OAAO;SACR;;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,KAAK,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE;YACjD,OAAO;SACR;QAED,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,MAAM,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;SACtE;;QAGD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC;aAC5C,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aAC3B,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;KACxC;IAED,QAAQ;;QAEN,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,KAAK,CAAC,IAAI,CAAC,QAAQ,KAAK,MAAM,IAAI,cAAc,GAAG,oBAAoB,CAAC,CAAC;QAEtG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QACrE,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QAE9D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAErE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QACrE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACzC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACtE;IAED,WAAW,CAAC,OAAY;QACtB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IACE,CAAC,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,YAAY;iBACvC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,EAC/C;gBACA,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;aACzC;YAED,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE;gBAC/C,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;SACF;QAED,IAAI,IAAI,CAAC,MAAM;aACV,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;YAC3D,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC;SAC1D;KACF;IAED,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9B,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,KAAa,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;SACpE;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;KAC1B;IAED,aAAa,CAAC,MAAM;QAClB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SACrC;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;IAED,OAAO,CAAC,KAAU;QAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,EAAE;YAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACnB,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,KAAK;aAChC,CAAC,CAAC;SACJ;KACF;IAED,WAAW,CAAC,KAAW;QACrB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;YACvC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;SACvB;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;YACtC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;SACrB;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;QAClB,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;SACrE;aAAM;YACL,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAClD;QAED,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI;YACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;SAC1B,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;KACxC;IAED,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;YACvC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;SACvB;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;YACtC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;SACrB;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAED,UAAU,CAAC,MAAkB;;QAE3B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,GAAQ;YACjC,IAAI,GAAG,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,EAAE;gBAC1B,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC;aACf;SACF,CAAC,CAAC;QACH,QAAQ,MAAM,CAAC,IAAI;YACjB,KAAK,KAAK;gBACR,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;gBACnC,MAAM;YACR,KAAK,MAAM;gBACT,MAAM,CAAC,IAAI,GAAG,SAAS,CAAC;gBACxB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACvB,MAAM;YACR,KAAK,SAAS;gBACZ,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;gBAC7B,MAAM;SACT;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAED,WAAW,CAAC,IAAS;QACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;KAC7B;;sFAjNU,mBAAmB;sEAAnB,mBAAmB;;mCAoBM,gBAAgB;mCAClB,gBAAgB;mCACd,gBAAgB;;;;;;;;;;YDrDtD,qHAA2C;YAC3C,qHAAyC;YACzC,qHAA2C;YAC3C,8BAAyB;YACvB,mCAAiD;YACjD,gCAA8D;YAC5D,sFAEe;YACf,wFACsD;YACtD,oCAAuD;YACvD,wFAAoF;YACpF,wFAEe;YACjB,iBAAQ,EAAA;;;YAZO,eAAiB;YAAjB,mCAAiB;YAEf,eAA+F;YAA/F,0JAA+F;YAG/F,eAAiB;YAAjB,sCAAiB;YAEjB,eAAuB;YAAvB,yCAAuB;YACvB,eAAiB;YAAjB,sCAAiB;YACjB,eAAkG;YAAlG,6JAAkG;;;;4ECkBxG,mBAAmB;kBAL/B,SAAS;+BACE,aAAa;4IAKd,cAAc;sBAAtB,KAAK;gBACG,GAAG;sBAAX,KAAK;gBACG,KAAK;sBAAb,KAAK;gBACG,MAAM;sBAAd,KAAK;gBACG,KAAK;sBAAb,KAAK;gBACG,OAAO;sBAAf,KAAK;gBACG,OAAO;sBAAf,KAAK;gBACG,QAAQ;sBAAhB,KAAK;gBACG,IAAI;sBAAZ,KAAK;gBACG,UAAU;sBAAlB,KAAK;gBACG,MAAM;sBAAd,KAAK;gBACG,KAAK;sBAAb,KAAK;gBACG,UAAU;sBAAlB,KAAK;gBACG,eAAe;sBAAvB,KAAK;gBACI,MAAM;sBAAf,MAAM;gBACG,SAAS;sBAAlB,MAAM;gBACG,SAAS;sBAAlB,MAAM;gBACG,UAAU;sBAAnB,MAAM;gBACG,KAAK;sBAAd,MAAM;gBAC8D,aAAa;sBAAjF,SAAS;uBAAC,gBAAgB,EAAE,EAAC,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAC;gBACA,WAAW;sBAA7E,SAAS;uBAAC,cAAc,EAAE,EAAC,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAC;gBACI,aAAa;sBAAjF,SAAS;uBAAC,gBAAgB,EAAE,EAAC,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAC;;;;MCGxD,UAAU;;oEAAV,UAAU;4DAAV,UAAU;iEALV;QACT,YAAY;QACZ,WAAW;KACZ,YAlCQ;YACP,YAAY;YACZ,WAAW;YACX,YAAY;YACZ,YAAY;YACZ,gBAAgB,CAAC,OAAO,EAAE;SAC3B;;4EA8BU,UAAU;kBArCtB,QAAQ;mBAAC;oBACR,OAAO,EAAE;wBACP,YAAY;wBACZ,WAAW;wBACX,YAAY;wBACZ,YAAY;wBACZ,gBAAgB,CAAC,OAAO,EAAE;qBAC3B;oBACD,YAAY,EAAE;wBACZ,mBAAmB;wBACnB,uBAAuB;wBACvB,qBAAqB;wBACrB,uBAAuB;wBACvB,6BAA6B;wBAC7B,2BAA2B;wBAC3B,6BAA6B;wBAC7B,mBAAmB;wBACnB,iBAAiB;wBACjB,mBAAmB;wBACnB,SAAS;qBACV;oBACD,OAAO,EAAE;wBACP,mBAAmB;qBACpB;oBACD,eAAe,EAAE;wBACf,uBAAuB;wBACvB,qBAAqB;wBACrB,uBAAuB;wBACvB,6BAA6B;wBAC7B,2BAA2B;wBAC3B,6BAA6B;qBAC9B;oBACD,SAAS,EAAE;wBACT,YAAY;wBACZ,WAAW;qBACZ;iBACF;;;;6EACY,UAAU,mBA5BnB,mBAAmB;YACnB,uBAAuB;YACvB,qBAAqB;YACrB,uBAAuB;YACvB,6BAA6B;YAC7B,2BAA2B;YAC3B,6BAA6B;YAC7B,mBAAmB;YACnB,iBAAiB;YACjB,mBAAmB;YACnB,SAAS,aAjBT,YAAY;YACZ,WAAW;YACX,YAAY;YACZ,YAAY,oCAiBZ,mBAAmB;;;ACzCvB;;;;ACAA;;;;;;"}}}