import { EventEmitter } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { FormioResourceConfig, FormioResources, FormioResourceMap } from './resource.config';
import { FormioLoader } from '../../index';
import { FormioRefreshValue } from '../../formio.common';
export declare class FormioResourceService {
    private config;
    private loader;
    private resourcesService;
    form: any;
    resource: any;
    resourceUrl: string;
    formUrl: string;
    formFormio: any;
    formio: any;
    onParents: EventEmitter<Array<Object>>;
    onIndexSelect: EventEmitter<Object>;
    refresh: EventEmitter<FormioRefreshValue>;
    resourceLoading: Promise<any>;
    resourceLoaded: Promise<any>;
    resourceResolve: any;
    resourceReject: any;
    formLoading: Promise<any>;
    formLoaded: Promise<any>;
    formResolve: any;
    formReject: any;
    resources: FormioResourceMap;
    constructor(config: FormioResourceConfig, loader: FormioLoader, resourcesService: FormioResources);
    onError(error: any): void;
    onFormError(err: any): void;
    loadForm(): Promise<any>;
    setParents(): void;
    onSubmissionError(err: any): void;
    loadResource(route: ActivatedRoute): Promise<any>;
    save(resource: any): any;
    remove(): any;
}
